parameters:
  - name: deployAPI
    displayName: Deploy API
    type: boolean
    default: true
  - name: deployWeb
    displayName: Deploy Web
    type: boolean
    default: true
  - name: deployDocumentCheckFunction
    displayName: Deploy Document Check Function
    type: boolean
    default: true
  - name: deployODWIntegrationFunctions
    displayName: Deploy ODW Integration Function
    type: boolean
    default: true
  - name: deployDocumentPublishFunction
    displayName: Deploy Document Publish Function
    type: boolean
    default: true
  - name: deployMalwareDetectedFunction
    displayName: Deploy Malware Detected Function
    type: boolean
    default: true
  - name: deployFunctionHandleSubscriptions
    displayName: Deploy Function - Handle Subscriptions
    type: boolean
    default: true
  - name: deployFunctionApplicationsMigration
    displayName: Deploy Function - Applications Migration
    type: boolean
    default: true
  - name: deployDeadlineSubmissionsFunction
    displayName: Deploy Function - Deadline Submissions
    type: boolean
    default: true
  - name: deployRegisterRepresentationFunction
    displayName: Deploy Function - Register Representation
    type: boolean
    default: true
  - name: deployFunctionNotifySubscribers
    displayName: Deploy Function - Notify Subscribers
    type: boolean
    default: true
  - name: region
    displayName: Region
    type: string
    values:
      - UK West
      - UK South
    default: UK West
  - name: schemaMigration
    displayName: Run Database Migration
    type: boolean
    default: true
  - name: runCypressTests
    displayName: Run Cypress Tests
    type: boolean
    default: true

pr: none
trigger: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.4.0
  pipelines:
    - pipeline: build
      source: Back Office Build
      trigger:
        branches:
          include:
            - main

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    automaticDeployments:
      environments:
        - name: Dev
        - name: Test
          dependsOn:
            - Dev
        - name: Prod
          dependsOn:
            - Test
    deploymentStages:
      - name: Deploy Applications
        deploymentJobs:
          - name: Deploy Applications API
            condition: eq(${{ parameters.deployAPI }}, 'true')
            steps:
              - ${{ if eq(parameters.schemaMigration, true) }}:
                  - checkout: self
                  - template: ../steps/azure_get_secrets.yml
                    parameters:
                      secrets:
                        - name: back-office-sql-connection-string
                          variable: DATABASE_URL
                  - template: ../steps/node_script.yml
                    parameters:
                      nodeVersion: 18
                      environmentVariables:
                        DATABASE_URL: $(DATABASE_URL)
                      script: npm run db:migrate:prod
                      workingDirectory: $(Build.Repository.LocalPath)/apps/api
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-back-office-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: back-office/back-office-api
          - name: Deploy Applications Web
            condition: eq(${{ parameters.deployWeb }}, 'true')
            steps:
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-back-office-wfe-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: back-office/back-office-web
          - name: Deploy Function - Document Check
            artifact:
              name: function-document-check
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployDocumentCheckFunction }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-doc-check-doc-check-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Deadline Submissions
            artifact:
              name: function-deadline-submissions
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployDeadlineSubmissionsFunction }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-deadline-subs-deadline-subs-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Register Representation
            artifact:
              name: function-register-representation
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployRegisterRepresentationFunction }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-bo-apps-register-representation-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - ODW Integration
            artifact:
              name: function-odw-integration
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployODWIntegrationFunctions }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-odw-subscriber-odw-subscriber-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Document Publish
            artifact:
              name: function-document-publish
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployDocumentPublishFunction }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-doc-publisher-doc-publisher-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Malware Detected
            artifact:
              name: function-malware-detected
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployMalwareDetectedFunction }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-malware-detected-malware-detected-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Handle Subscriptions
            artifact:
              name: function-handle-subscriptions
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployFunctionHandleSubscriptions }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-handle-subs-handle-subs-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Applications Migration
            artifact:
              name: function-applications-migration
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployFunctionApplicationsMigration }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-apps-migration-apps-migration-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy Function - Notify Subscribers
            artifact:
              name: function-notify-subscribers
              sourcePipeline: Back Office Build
            condition: eq(${{ parameters.deployFunctionNotifySubscribers }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-notify-subs-notify-subs-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
    globalVariables:
      - template: azure-pipelines-variables.yml@self
