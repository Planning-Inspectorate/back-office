{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
		
{% macro appealSummary(params) %}
	{% set appeal = params.appeal %}
  {# Row value classes are just test identifiers as there is no way to pass attributes to the value using govukSummaryList #}
	{% set appealSummaryListRows = [
		{
			key: { text: "Appellant name" },
			value: {
				text: appeal.AppellantName,
				classes: "appellantName"
			},
			actions: {
				items: [
					{ 
            href: '/validation/appeals/' + appeal.AppealId + '/appellant-name',
            text: "Change",
            visuallyHiddenText: 'appellant name'            
          }
				]
			}
		}, {
			key: { text: "Appeal reference" },
			value: { text: appeal.AppealReference }
		}, {
			key: { text: "Received on" },
			value: { text: appeal.Received }
		}, {
			key: { text: "Appeal site" },
			value: {
				html: appeal.AppealSite | collapse('<br>'),
				classes: "appealSite"
			},
			actions: {
				items: [
					{ 
            href: '/validation/appeals/' + appeal.AppealId + '/appeal-site',
            text: "Change",
            visuallyHiddenText: 'appeal site'
          }
				]
			}
		}, {
			key: { text: "Local planning department" },
			value: {
				text: appeal.LocalPlanningDepartment,
				classes: "localPlanningDepartment"
			},
			actions: {
				items: [
					{
            href: '/validation/appeals/' + appeal.AppealId + '/local-planning-department',
            text: "Change",
            visuallyHiddenText: 'local planning department'
          }
				]
			}
		}, {
			key: { text: "Planning application reference" },
			value: {
				text: appeal.PlanningApplicationReference,
				classes: "planningApplicationReference"
			},
			actions: {
				items: [
					{
            href: '/validation/appeals/' + appeal.AppealId + '/planning-application-reference',
            text: "Change",
            visuallyHiddenText: 'planning application reference'
          }
				]
			}
		}
	] %}

	{% if appeal.AppealStatus === 'incomplete' %}
		{% set appealSummaryListRows = appealSummaryListRows |  concat({
			key: { text: "Reasons why incomplete" },
			value: {
				html: incompleteReasonList(appeal.reasons)
			}
		})
 	%}
	{% endif %}

	{{ govukSummaryList({ rows: appealSummaryListRows }) }}
{% endmacro %}

{% macro incompleteReasonList(reasons) %}
	<ul class="govuk-list">
  	{% for entry in reasons | entries %}
			<li>
				{% if entry[0] === 'otherReasons' %}
					{{ entry[1] }}
				{% else %}
					{{ entry[0] | validationLabel }}
				{% endif %}
			</li>
		{% endfor %}
	</ul>
{% endmacro %}
