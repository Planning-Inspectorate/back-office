{% extends "app/layouts/app-two-column.layout.njk" %}

{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}

{% set pageTitle = 'What is missing or wrong?' %}
{% set backLinkUrl = '/validation/appeals/' + appeal.AppealId %}
{% set reasons = reviewOutcome.reasons %}

{% block pageContent %}
	<p class="govuk-body">
		Appeal reference: {{ appeal.AppealReference }}
	</p>

	<form method="post" novalidate>
		<input type="hidden" name="status" value="{{ reviewOutcome.status }}" />
		{{ 
			govukCheckboxes({
				idPrefix: "reasons",
				name: "reasons[]",
				errorMessage: errors.reasons | errorMessage,
				items: [
					'namesDoNotMatch' | reasonCheckboxItem(reasons),
					'sensitiveInfo' | reasonCheckboxItem(reasons),
					{
						value: 'missingDocuments',
						text: 'Missing or wrong documents',
						checked: errors.documentReasons or reasons | hasOneOf([
							'missingApplicationForm',
							'missingDecisionNotice',
							'missingGroundsForAppeal',
							'missingSupportingDocuments'
						]),
						conditional: {
							html: govukCheckboxes({
								idPrefix: "documentReasons",
								name: "documentReasons[]",
								errorMessage: errors.documentReasons | errorMessage,
								items: [
									'missingApplicationForm' | reasonCheckboxItem(reasons),
									'missingDecisionNotice' | reasonCheckboxItem(reasons),
									'missingGroundsForAppeal' | reasonCheckboxItem(reasons),
									'missingSupportingDocuments' | reasonCheckboxItem(reasons)
								]
							})
						}
					},
					'inflammatoryComments' | reasonCheckboxItem(reasons),
					'openedInError' | reasonCheckboxItem(reasons),
					'wrongAppealTypeUsed' | reasonCheckboxItem(reasons),
					{
						value: 'otherReasons',
						text: "Other",
						checked: reasons | has('otherReasons'),
						conditional: {
							html: govukInput({
								type: 'text',
								id: "otherReasons",
								name: "otherReasons",
								label: { text: 'List reasons' },
								errorMessage: errors.otherReasons | errorMessage,
								spellcheck: true,
								value: reasons.otherReasons
							})
						}
					}
				]
			})
		}}

		<div class="govuk-button-group">
			{{ govukButton({ text: text | default('Continue') }) }}
			<a class="govuk-link" href="{{ backLinkUrl }}">Change outcome</a>
		</div>
	</form>
{% endblock %}
