<h3 class="govuk-heading-m">Representation</h3>

<dl class="govuk-summary-list govuk-!-margin-bottom-9">
  <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
    <dt class="govuk-summary-list__key">
      Reference
    </dt>

    <dd class="govuk-summary-list__value">
      {{ representation.reference }}
    </dd>
  </div>

  <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
    <dt class="govuk-summary-list__key">
      Date received
    </dt>
    <dd class="govuk-summary-list__value">
      {{ representation.originalRepresentation and representation.received | displayDate }}
    </dd>
  </div>

  <div class="govuk-summary-list__row" id="original-representation-section">
    <dt class="govuk-summary-list__key">
      Original representation
    </dt>

    <dd class="govuk-summary-list__value">
      {% if representationExcerpts.originalRepresentationExcerpt | length %}
        <p class="section-text govuk-body white-space--pre-line">
          <noscript>{{ representation.originalRepresentation }}</noscript>
        </p>

        <p class="govuk-body govuk-!-margin-bottom-4">
          <a href="#" hidden class="section-text-toggle govuk-link govuk-link--no-visited-state">Show full representation</a>
        </p>
      {% else %}
        <p class="govuk-body white-space--pre-line">{{ representation.originalRepresentation }}</p>
      {% endif %}
    </dd>

    <dd class="govuk-summary-list__actions">
      <a class="govuk-link" href="{{ 'redact-representation' | url({ caseId: caseId, representationId: representationId }) }}">
        Redact<span class="govuk-visually-hidden"> original representation</span>
      </a>
    </dd>
  </div>

  {% if representation.redacted %}
    <div class="govuk-summary-list__row govuk-summary-list__row--no-actions" id="redacted-representation-section">
      <dt class="govuk-summary-list__key">
        Redacted representation
      </dt>

      <dd class="govuk-summary-list__value">
        {% if representationExcerpts.redactedRepresentationExcerpt | length %}
          <p class="section-text govuk-body white-space--pre-line">
            <noscript>{{ representation.redactedRepresentation }}</noscript>
          </p>

          <p class="govuk-body govuk-!-margin-bottom-4">
            <a href="#" hidden class="section-text-toggle govuk-link govuk-link--no-visited-state">Show full redacted representation</a>
          </p>
        {% else %}
          <p class="govuk-body white-space--pre-line">{{ representation.redactedRepresentation }}</p>
        {% endif %}
      </dd>
    </div>

    <div class="govuk-summary-list__row govuk-summary-list__row--no-actions" id="redacted-notes-section">
      <dt class="govuk-summary-list__key">
        Redacted Notes
      </dt>

      <dd class="govuk-summary-list__value">
        {% if representationExcerpts.redactedNotesExcerpt | length %}
          <p class="section-text govuk-body white-space--pre-line">
            <noscript>{{ representation.redactedNotes }}</noscript>
          </p>

          <p class="govuk-body govuk-!-margin-bottom-4">
            <a href="#" hidden class="section-text-toggle govuk-link govuk-link--no-visited-state">Show full redacted notes</a>
          </p>
        {% else %}
          <p class="govuk-body white-space--pre-line">{{ representation.redactedNotes }}</p>
        {% endif %}
      </dd>
    </div>

    <div class="govuk-summary-list__row govuk-summary-list__row--no-actions">
      <dt class="govuk-summary-list__key">
        Redacted by
      </dt>

      <dd class="govuk-summary-list__value">
        <p class="govuk-body white-space--pre-line">{{ representation.redactedBy }}</p>
      </dd>
    </div>
  {% endif %}
</dl>

<script nonce="{{cspNonce}}">
  function ToggleText() {
    this.toggle = (sectionId, text, textExcerpt, textToggleCopy) => {
      const section = document.querySelector(sectionId);
      const sectionText = section.querySelector('.section-text');
      const sectionTextToggle = section.querySelector('.section-text-toggle');

      let isOpen = false;

      const setSectionTextValues = (setSectionText, prependTextToggleCopy) => {
        sectionText.innerText = setSectionText
        sectionTextToggle.innerText = `${prependTextToggleCopy} full ${textToggleCopy}`
      }

      const toggleSectionText = (e) => {
        e.preventDefault()

        if (isOpen) setSectionTextValues(textExcerpt, 'Show');
        else setSectionTextValues(text, 'Hide');

        isOpen = !isOpen
      }

      setSectionTextValues(textExcerpt, 'Show')
      sectionTextToggle.removeAttribute('hidden');

      sectionTextToggle.addEventListener('click', toggleSectionText)
    }
  }

  {% if representationExcerpts.originalRepresentationExcerpt | length %}
    const toggleRepresentationText = new ToggleText();
    toggleRepresentationText.toggle(
      '#original-representation-section',
      `{{ representation.originalRepresentation }}`,
      `{{ representationExcerpts.originalRepresentationExcerpt }}...`,
      'representation'
    );
  {% endif %}

  {% if representationExcerpts.redactedRepresentationExcerpt | length %}
    const toggleRedactedRepresentationText = new ToggleText();
    toggleRedactedRepresentationText.toggle(
      '#redacted-representation-section',
      `{{ representation.redactedRepresentation }}`,
      `{{ representationExcerpts.redactedRepresentationExcerpt }}...`,
      'redacted representation'
    );
  {% endif %}

  {% if representationExcerpts.redactedNotesExcerpt | length %}
    const toggleRedactedNotesText = new ToggleText();
    toggleRedactedNotesText.toggle(
      '#redacted-notes-section',
      `{{ representation.redactedNotes }}`,
      `{{ representationExcerpts.redactedNotesExcerpt }}...`,
      'redacted notes'
    );
  {% endif %}
</script>
