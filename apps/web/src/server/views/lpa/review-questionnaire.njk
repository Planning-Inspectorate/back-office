{% extends "app/layouts/app-wide.layout.njk" %}

{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}

{% from "_includes/macros/make-document-links-for-type.njk" import makeDocumentLinksForType %}

{%- macro detailsInput(type, idPrefix, labelText, details, checkboxItems) -%}
	{%- if type === 'textarea' -%}
		{{ govukCharacterCount({
			id: idPrefix + '-missing-or-incorrect-reason',
			name: idPrefix + '-missing-or-incorrect-reason',
			maxlength: 500,
			label: { text: labelText },
			errorMessage: details.error and { text: details.error.msg },
			spellcheck: true,
			value: details.value,
			rows: '3'
		}) }}
	{%- elif type === 'checkboxes' -%}
		{{ govukCheckboxes({
			idPrefix: idPrefix + '-missing-or-incorrect-reason',
			name: idPrefix + '-missing-or-incorrect-reason',
			errorMessage: details.error and { text: details.error.msg },
			items: checkboxItems
		}) }}
	{%- endif -%}
{%- endmacro -%}

{%- macro missingOrIncorrectCheckbox(id, completed, completedError, conditionalHtml) -%}
	{{ govukCheckboxes({
		idPrefix: id + "-missing-or-incorrect",
		name: id + "-missing-or-incorrect",
		classes: "govuk-checkboxes--small",
		formGroup: {
			classes: 'govuk-!-margin-bottom-0'
		},
		errorMessage: completedError and {
			text: completedError
		},
		items: [
			{
				value: "true",
				text: "Missing or incorrect",
				checked: completed === 'true',
				conditional: conditionalHtml
			}
		]
	}) }}
{%- endmacro -%}

{% set pageTitle = 'Review questionnaire' %}

{% block content %}
	{{ super() }}

	{% if errorSummary %}
		{{ govukErrorSummary({
			titleText: "There is a problem",
			errorList: errorSummary
		}) }}
	{% endif %}

	{{ govukBreadcrumbs({
		classes: 'govuk-!-margin-top-0 govuk-!-margin-bottom-8',
		items: [
			{ href: backURL, text: 'Questionnaires for review' },
			{ text: questionnaireData.AppealReference }
		]
	}) }}

	<div class="govuk-grid-row">
		<div class="govuk-grid-column-two-thirds">
			{{ govukTable({
				rows: [
					[
						{ html: '<strong>Appeal reference</strong>' },
						{ text: questionnaireData.AppealReference }
					],
					[
						{ html: '<strong>Appeal site</strong>' },
						{ html: questionnaireData.AppealSite | address }
					],
					[
						{ html: '<strong>Local planning department</strong>' },
						{ text: questionnaireData.LocalPlanningDepartment }
					]
				]
			}) }}
		</div>
	</div>

	<form action="" method="post" novalidate>
		<h2 class="govuk-heading-l govuk-!-margin-top-6">The planning application</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Planning application reference</strong>' },
					{ text: questionnaireData.PlanningApplicationreference },
					{ text: '' }
				],
				[
					{ html: '<strong>Decision notice</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'decision notice') },
					{ text: '' }
				],
				[
					{ html: '<strong>Planning Officer\'s report</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'planning officers report') },
					{ html: missingOrIncorrectCheckbox(
						'planning-officers-report',
						fields.planningOfficersReport.completed,
						fields.planningOfficersReport.error
					)}
				],
				[
					{ html: '<strong>Plans used to reach decision</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'plans used to reach decision') },
					{ html: missingOrIncorrectCheckbox(
						'plans-used-to-reach-decision',
						fields.plansUsedToReachDecision.completed,
						fields.plansUsedToReachDecision.error,
						{ html: detailsInput('textarea', 'plans-used-to-reach-decision', 'Which plans are missing?', fields.plansUsedToReachDecision.details)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">Local plans and policies</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Statutory development plan policies</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'statutory development plan policy') },
					{ html: missingOrIncorrectCheckbox(
						'statutory-development-plan-policies',
						fields.statutoryDevelopmentPlanPolicies.completed,
						fields.statutoryDevelopmentPlanPolicies.error,
						{ html: detailsInput('textarea', 'statutory-development-plan-policies', 'Which policies are missing?', fields.statutoryDevelopmentPlanPolicies.details)}
					)}
				],
				[
					{ html: '<strong>Other relevant policies</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'other relevant policy') },
					{ html: missingOrIncorrectCheckbox(
						'other-relevant-policies',
						fields.otherRelevantPolicies.completed,
						fields.otherRelevantPolicies.error,
						{ html: detailsInput('textarea', 'other-relevant-policies', 'Which policies are missing?', fields.otherRelevantPolicies.details)}
					)}
				],
				[
					{ html: '<strong>Supplementary planning documents</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'supplementary planning document') },
					{ html: missingOrIncorrectCheckbox(
						'supplementary-planning-documents',
						fields.supplementaryPlanningDocuments.completed,
						fields.supplementaryPlanningDocuments.error,
						{ html: detailsInput('textarea', 'supplementary-planning-documents', 'Which documents are missing?', fields.supplementaryPlanningDocuments.details)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">About the appeal site</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Is the appeal site in or near a conservation area?</strong>' },
					{ text: 'Yes' },
					{ text: '' }
				],
				[
					{ html: '<strong>Conservation area map and guidance</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'conservation area guidance') },
					{ html: missingOrIncorrectCheckbox(
						'conservation-area-guidance',
						fields.conservationAreaGuidance.completed,
						fields.conservationAreaGuidance.error,
						{ html: detailsInput('textarea', 'conservation-area-guidance', 'What is missing or incorrect?', fields.conservationAreaGuidance.details)}
					)}
				],
				[
					{ html: '<strong>Would the development affect the setting of a listed building?</strong>' },
					{ text: 'Yes' },
					{ text: '' }
				],
				[
					{ html: '<strong>Listed building description</strong>' },
					{ text: 'There is a grade 2 listed building next door.' },
					{ html: missingOrIncorrectCheckbox(
						'listed-building-description',
						fields.listedBuildingDescription.completed,
						fields.listedBuildingDescription.error,
						{ html: detailsInput('textarea', 'listed-building-description', 'What is missing or incorrect?', fields.listedBuildingDescription.details)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">Interested parties</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Application notification</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'application notification') },
					{ html: missingOrIncorrectCheckbox(
						'application-notification',
						fields.applicationNotification.completed,
						fields.applicationNotification.error,
						{ html: detailsInput('checkboxes', 'application-notification', 'What is missing or incorrect?', fields.applicationNotification.details, [
							{ value: 'listOfAddresses', text: "List of addresses", checked: fields.applicationNotification.details.checkValues['listOfAddresses'] },
							{ value: 'copyOfLetterOrSiteNotice', text: "Copy of letter or site notice", checked: fields.applicationNotification.details.checkValues['copyOfLetterOrSiteNotice'] }
						])}
					)}
				],
				[
					{ html: '<strong>Application publicity</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'application publicity') },
					{ html: missingOrIncorrectCheckbox(
						'application-publicity',
						fields.applicationPublicity.completed,
						fields.applicationPublicity.error
					)}
				],
				[
					{ html: '<strong>Representations</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'representation') },
					{ html: missingOrIncorrectCheckbox(
						'representations',
						fields.representations.completed,
						fields.representations.error,
						{ html: detailsInput('textarea', 'representations', 'Which representations are missing or incorrect?', fields.representations.details)}
					)}
				],
				[
					{ html: '<strong>Appeal notification</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'appeal notification') },
					{ html: missingOrIncorrectCheckbox(
						'appeal-notification',
						fields.appealNotification.completed,
						fields.appealNotification.error,
						{ html: detailsInput('checkboxes', 'appeal-notification', 'What is missing or incorrect?', fields.appealNotification.details, [
							{ value: 'listOfAddresses', text: "List of addresses", checked: fields.appealNotification.details.checkValues['listOfAddresses'] },
							{ value: 'copyOfLetterOrSiteNotice', text: "Copy of letter or site notice", checked: fields.appealNotification.details.checkValues['copyOfLetterOrSiteNotice'] }
						])}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">Finished your review?</h2>

		<div class="govuk-button-group">
			{{ govukButton({ text: 'Continue' }) }}
		</div>
	</form>

{% endblock %}
