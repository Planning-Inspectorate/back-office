{% extends "app/layouts/app.layout.njk" %}

{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}

{% from "_includes/macros/make-document-links-for-type.njk" import makeDocumentLinksForType %}

{% macro detailsTextarea(id, labelText, value, error) %}
	{{ govukCharacterCount({
		id: id,
		name: id,
		maxlength: 500,
		label: { text: labelText },
		errorMessage: error and { text: error.msg },
		spellcheck: true,
		value: value,
		rows: '3'
	}) }}
{% endmacro %}

{% macro detailsCheckboxes(id, error, checkboxItems) %}
	{{ govukCheckboxes({
		id: id,
		name: id,
		errorMessage: error and { text: error.msg },
		items: checkboxItems
	}) }}
{% endmacro %}

{%- macro missingOrIncorrectCheckbox(id, value, error, conditionalHtml) -%}
	{{ govukCheckboxes({
		id: id,
		name: id,
		classes: "govuk-checkboxes--small",
		formGroup: {
			classes: 'govuk-!-margin-bottom-0'
		},
		errorMessage: error and {
			text: error.msg
		},
		items: [
			{
				value: "true",
				text: "Missing or incorrect",
				checked: value === 'true',
				conditional: conditionalHtml
			}
		]
	}) }}
{%- endmacro -%}

{% set pageTitle = 'Review questionnaire' %}

{% block beforeContent %}
	{{
		govukBreadcrumbs({
			classes: 'govuk-!-margin-top-0 govuk-!-margin-top-3',
			items: [
				{ href: backURL, text: 'Questionnaires for review' },
				{ text: questionnaireData.AppealReference }
			]
		})	
	}}
{% endblock %}

{% block pageContent %}
	<div class="govuk-grid-row">
		<div class="govuk-grid-column-two-thirds">
			{{ govukTable({
				rows: [
					[
						{ html: '<strong>Appeal reference</strong>' },
						{ text: questionnaireData.AppealReference }
					],
					[
						{ html: '<strong>Appeal site</strong>' },
						{ html: questionnaireData.AppealSite | address }
					],
					[
						{ html: '<strong>Local planning department</strong>' },
						{ text: questionnaireData.LocalPlanningDepartment }
					]
				]
			}) }}
		</div>
	</div>

	<form action="" method="post" novalidate>
		<h2 class="govuk-heading-l govuk-!-margin-top-6">The planning application</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Planning application reference</strong>' },
					{ text: questionnaireData.PlanningApplicationreference },
					{ text: '' }
				],
				[
					{ html: '<strong>Decision notice</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'decision notice') },
					{ text: '' }
				],
				[
					{ html: '<strong>Planning Officer\'s report</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'planning officers report') },
					{ html: missingOrIncorrectCheckbox(
						'applicationPlanningOfficersReportMissingOrIncorrect',
						fields['applicationPlanningOfficersReportMissingOrIncorrect'],
						errors['applicationPlanningOfficersReportMissingOrIncorrectDescription']
					)}
				],
				[
					{ html: '<strong>Plans used to reach decision</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'plans used to reach decision') },
					{ html: missingOrIncorrectCheckbox(
						'applicationPlansToReachDecisionMissingOrIncorrect',
						fields['applicationPlansToReachDecisionMissingOrIncorrect'],
						errors['applicationPlansToReachDecisionMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'applicationPlansToReachDecisionMissingOrIncorrectDescription',
							'Which plans are missing?',
							fields['applicationPlansToReachDecisionMissingOrIncorrectDescription'],
							errors['applicationPlansToReachDecisionMissingOrIncorrectDescription']
						)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">Local plans and policies</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Statutory development plan policies</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'statutory development plan policy') },
					{ html: missingOrIncorrectCheckbox(
						'policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrect',
						fields['policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrect'],
						errors['policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrectDescription',
							'Which plans are missing?',
							fields['policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrectDescription'],
							errors['policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrectDescription']
						)}
					)}
				],
				[
					{ html: '<strong>Other relevant policies</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'other relevant policy') },
					{ html: missingOrIncorrectCheckbox(
						'policiesOtherRelevantPoliciesMissingOrIncorrect',
						fields['policiesOtherRelevantPoliciesMissingOrIncorrect'],
						errors['policiesOtherRelevantPoliciesMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'policiesOtherRelevantPoliciesMissingOrIncorrectDescription',
							'Which policies are missing?',
							fields['policiesOtherRelevantPoliciesMissingOrIncorrectDescription'],
							errors['policiesOtherRelevantPoliciesMissingOrIncorrectDescription']
						)}
					)}
				],
				[
					{ html: '<strong>Supplementary planning documents</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'supplementary planning document') },
					{ html: missingOrIncorrectCheckbox(
						'policiesSupplementaryPlanningDocumentsMissingOrIncorrect',
						fields['policiesSupplementaryPlanningDocumentsMissingOrIncorrect'],
						errors['policiesSupplementaryPlanningDocumentsMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'policiesSupplementaryPlanningDocumentsMissingOrIncorrectDescription',
							'Which plans are missing?',
							fields['policiesSupplementaryPlanningDocumentsMissingOrIncorrectDescription'],
							errors['policiesSupplementaryPlanningDocumentsMissingOrIncorrectDescription']
						)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">About the appeal site</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Is the appeal site in or near a conservation area?</strong>' },
					{ text: 'Yes' },
					{ text: '' }
				],
				[
					{ html: '<strong>Conservation area map and guidance</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'conservation area guidance') },
					{ html: missingOrIncorrectCheckbox(
						'siteConservationAreaMapAndGuidanceMissingOrIncorrect',
						fields['siteConservationAreaMapAndGuidanceMissingOrIncorrect'],
						errors['siteConservationAreaMapAndGuidanceMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'siteConservationAreaMapAndGuidanceMissingOrIncorrectDescription',
							'Which plans are missing?',
							fields['siteConservationAreaMapAndGuidanceMissingOrIncorrectDescription'],
							errors['siteConservationAreaMapAndGuidanceMissingOrIncorrectDescription']
						)}
					)}
				],
				[
					{ html: '<strong>Would the development affect the setting of a listed building?</strong>' },
					{ text: 'Yes' },
					{ text: '' }
				],
				[
					{ html: '<strong>Listed building description</strong>' },
					{ text: 'There is a grade 2 listed building next door.' },
					{ html: missingOrIncorrectCheckbox(
						'siteListedBuildingDescriptionMissingOrIncorrect',
						fields['siteListedBuildingDescriptionMissingOrIncorrect'],
						errors['siteListedBuildingDescriptionMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'siteListedBuildingDescriptionMissingOrIncorrectDescription',
							'Which plans are missing?',
							fields['siteListedBuildingDescriptionMissingOrIncorrectDescription'],
							errors['siteListedBuildingDescriptionMissingOrIncorrectDescription']
						)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">Interested parties</h2>

		{{ govukTable({
			rows: [
				[
					{ html: '<strong>Application notification</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'application notification') },
					{ html: missingOrIncorrectCheckbox(
						'thirdPartyApplicationNotificationMissingOrIncorrect',
						fields['thirdPartyApplicationNotificationMissingOrIncorrect'],
						errors['thirdPartyApplicationNotificationMissingOrIncorrectDescription'],
						{ html: detailsCheckboxes(
							'thirdPartyApplicationNotificationMissingOrIncorrectDescription',
							errors['thirdPartyApplicationNotificationMissingOrIncorrectDescription'],
							[
								{
									value: 'thirdPartyApplicationNotificationMissingOrIncorrectListOfAddresses',
									text: "List of addresses",
									checked: fields['thirdPartyApplicationNotificationMissingOrIncorrectListOfAddresses']
								},
								{
									value: 'thirdPartyApplicationNotificationMissingOrIncorrectCopyOfLetterOrSiteNotice',
									text: "Copy of letter or site notice",
									checked: fields['thirdPartyApplicationNotificationMissingOrIncorrectCopyOfLetterOrSiteNotice']
								}
							]
						)}
					)}
				],
				[
					{ html: '<strong>Application publicity</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'application publicity') },
					{ html: missingOrIncorrectCheckbox(
						'thirdPartyApplicationPublicityMissingOrIncorrect',
						fields['thirdPartyApplicationPublicityMissingOrIncorrect'],
						errors['thirdPartyApplicationPublicityMissingOrIncorrect']
					)}
				],
				[
					{ html: '<strong>Representations</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'representation') },
					{ html: missingOrIncorrectCheckbox(
						'thirdPartyRepresentationsMissingOrIncorrect',
						fields['thirdPartyRepresentationsMissingOrIncorrect'],
						errors['thirdPartyRepresentationsMissingOrIncorrectDescription'],
						{ html: detailsTextarea(
							'thirdPartyRepresentationsMissingOrIncorrectDescription',
							'Which plans are missing?',
							fields['thirdPartyRepresentationsMissingOrIncorrectDescription'],
							errors['thirdPartyRepresentationsMissingOrIncorrectDescription']
						)}
					)}
				],
				[
					{ html: '<strong>Appeal notification</strong>' },
					{ html: makeDocumentLinksForType(questionnaireData.Documents, 'appeal notification') },
					{ html: missingOrIncorrectCheckbox(
						'thirdPartyAppealNotificationMissingOrIncorrect',
						fields['thirdPartyAppealNotificationMissingOrIncorrect'],
						errors['thirdPartyAppealNotificationMissingOrIncorrectDescription'],
						{ html: detailsCheckboxes(
							'thirdPartyAppealNotificationMissingOrIncorrectDescription',
							errors['thirdPartyAppealNotificationMissingOrIncorrectDescription'],
							[
								{
									value: 'thirdPartyAppealNotificationMissingOrIncorrectListOfAddresses',
									text: "List of addresses",
									checked: fields['thirdPartyAppealNotificationMissingOrIncorrectListOfAddresses']
								},
								{
									value: 'thirdPartyAppealNotificationMissingOrIncorrectCopyOfLetterOrSiteNotice',
									text: "Copy of letter or site notice",
									checked: fields['thirdPartyAppealNotificationMissingOrIncorrectCopyOfLetterOrSiteNotice']
								}
							]
						)}
					)}
				]
			]
		}) }}

		<h2 class="govuk-heading-l govuk-!-margin-top-9">Finished your review?</h2>

		<div class="govuk-button-group">
			{{ govukButton({ text: 'Continue' }) }}
		</div>
	</form>

{% endblock %}
