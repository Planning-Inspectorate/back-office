{% extends "appeals/case-officer/layouts/appeal.njk" %}

{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "app/components/document-list.component.njk" import documentList %}

{% set pageTitle = 'Review questionnaire' %}
{% set questionnaire = reviewQuestionnaire  %}

{% block appealContent %}
	<form action="/appeals-service/case-officer/appeals/{{ appeal.AppealId }}/questionnaire" method="post" novalidate="novalidate">
		{% include 'app/includes/csrf.njk' %}
		{{
			questionnaireTable({
				caption: 'The planning application',
				rows: [
					[
						{ text: 'Planning application reference' },
						{ text: appeal.PlanningApplicationreference }
					],
					[
						{ text: 'Decision notice' },
						{ html: questionnaireDocumentList('decision letter') }
					],
					[
						{ text: 'planning officers report' | lpaLabel },
						{ html: questionnaireDocumentList('planning officers report') },
						{ html: questionnaireCheckbox({
								value: 'applicationPlanningOfficersReportMissingOrIncorrect'
							})
						}
					],
					[
						{ text: 'plans used to reach decision' | lpaLabel },
						{ html: questionnaireDocumentList('plans used to reach decision') },
						{ html: questionnaireDescription({
								labelText: 'Which plans are missing?',
								name: 'applicationPlansToReachDecisionMissingOrIncorrect'
							})
						} 
					]
				]
			})
		}}
		{{
			questionnaireTable({
				caption: 'Local plans and policies',
				rows: [
					[
						{ text: 'statutory development plan policy' | lpaLabel },
						{ html: questionnaireDocumentList('statutory development plan policy') },
						{ html: questionnaireDescription({
								labelText: 'Which policies are missing?',
								name: 'policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrect'
							})
						}  
					],
					[
						{ text: 'other relevant policy' | lpaLabel },
						{ html: questionnaireDocumentList('other relevant policy') },
						{ html: questionnaireDescription({
								labelText: 'Which policies are missing?',
								name: 'policiesOtherRelevantPoliciesMissingOrIncorrect'
							})
						}
					],
					[
						{ text: 'supplementary planning document' | lpaLabel },
						{ html: questionnaireDocumentList('supplementary planning document') },
						{ html: questionnaireDescription({
								labelText: 'Which documents are missing?',
								name: 'policiesSupplementaryPlanningDocumentsMissingOrIncorrect'
							})
						}
					]
				]
			})
		}}
		{{
			questionnaireTable({
				caption: 'About the appeal site',
				rows: [
					[
						{ text: 'Is the appeal site in or near a conservation area?' },
						{ text: 'Yes' if appeal.AppealSiteNearConservationArea else 'No' }
					],
					[
						{ text: 'conservation area guidance' | lpaLabel },
						{ html: questionnaireDocumentList('conservation area guidance') },
						{ html: questionnaireDescription({
								labelText: 'What is missing or incorrect?',
								name: 'siteConservationAreaMapAndGuidanceMissingOrIncorrect'
							})
						}
					],
					[
						{ text: 'Would the development affect the setting of a listed building?' },
						{ text: 'Yes' if WouldDevelopmentAffectSettingOfListedBuilding else 'No' }
					],
					[
						{ text: 'Listed building description' },
						{ text: appeal.ListedBuildingDesc },
						{ html: questionnaireDescription({
								labelText: 'What is missing or incorrect?',
								name: 'siteListedBuildingDescriptionMissingOrIncorrect'
							})
						}
					]
				]
			})
		}}
		{{
			questionnaireTable({
				caption: 'Interested parties',
				rows: [
					[
						{ text: 'application notification' | lpaLabel },
						{ html: questionnaireDocumentList('application notification') },
						{ html: questionnaireDocumentCheckboxes({
								name: 'thirdPartyApplicationNotificationMissingOrIncorrect'
							})
						}
					],
					[
						{ text: 'application publicity' | lpaLabel },
						{ html: questionnaireDocumentList('application publicity') },
						{ html: questionnaireCheckbox({
								value: 'thirdPartyApplicationPublicityMissingOrIncorrect'
							})
						}
					],
					[
						{ text: 'representation' | lpaLabel },
						{ html: questionnaireDocumentList('representation') },
						{ html: questionnaireDescription({
								labelText: 'Which representations are missing or incorrect?',
								name: 'thirdPartyRepresentationsMissingOrIncorrect'
							})
						}
					],
					[
						{ text: 'appeal notification' | lpaLabel },
						{ html: questionnaireDocumentList('appeal notification') },
						{ html: questionnaireDocumentCheckboxes({
								name: 'thirdPartyAppealNotificationMissingOrIncorrect'
							})
						}
					]
				]
			})
		}}
		<h2 class="govuk-heading-l govuk-!-margin-top-9">Finished your review?</h2>
		<div class="govuk-button-group">
			{{ govukButton({ text: 'Continue' }) }}
		</div>
	</form>
{% endblock %}

{% macro questionnaireTable(params) %}
	{% set paddedRows = [] %}
	{% for row in params.rows %}
		{% set paddedRow = row | concat({}) if row.length === 2 else row %}
		{% set paddedRows = paddedRows.concat([paddedRow]) %}
	{% endfor %}
	{{
		govukTable({
			caption: params.caption,
			captionClasses: "govuk-table__caption--l",
			classes: 'pins-table--questionnaire govuk-!-margin-bottom-9',
			firstCellIsHeader: true,
			rows: paddedRows
		})
	}}
{% endmacro %}

{% macro questionnaireCheckbox(params) %}
	{{
		govukCheckboxes({
			idPrefix: params.value + 'Toggle',
			name: 'answers[]',
			classes: "govuk-checkboxes--small",
			formGroup: {
				classes: "govuk-!-margin-bottom-0"
			},
			items: [
				{
					value: params.value,
					text: "Missing or incorrect",
					checked: questionnaire[params.value],
					conditional: params.conditional
				}
			]
		})
	}}
{% endmacro %}

{% macro questionnaireDescription(params) %}
	{% set descriptionName = params.name + 'Description' %}
	{{
		questionnaireCheckbox({
			value: params.name,
			conditional: {
				html: govukCharacterCount({
					id: descriptionName,
					name: descriptionName,
					label: { text: params.labelText },
					errorMessage: errors[descriptionName] | errorMessage,
					spellcheck: true,
					maxlength: 500,
					value: questionnaire[descriptionName],
					rows: '3'
				})
			}
		})
	}}
{% endmacro %}

{% macro questionnaireDocumentCheckboxes(params) %}
	{% set addressesKey = params.name + 'ListOfAddresses' %}
	{% set siteNoticeKey = params.name + 'CopyOfLetterOrSiteNotice' %}
	{{
		questionnaireCheckbox({
			value: params.name,
			conditional: {
				html: govukCheckboxes({
					idPrefix: params.name,
					name: params.name + '[]',
					errorMessage: errors[params.name] | errorMessage,
					classes: "govuk-checkboxes--small",
					fieldset: {
						legend: {
							text: 'What is missing or incorrect?'
						}
					},
					formGroup: {
						classes: "govuk-!-margin-bottom-0"
					},
					items: [
						{
							value: addressesKey,
							text: addressesKey | lpaLabel,
							checked: questionnaire[addressesKey]
						},
						{
							value: siteNoticeKey,
							text: siteNoticeKey | lpaLabel,
							checked: questionnaire[siteNoticeKey]
						}
					]
				})
			}
		})
	}}
{% endmacro %}

{% macro questionnaireDocumentList(documentType) %}
	{% set documents = appeal.Documents | filter({ Type: documentType }) %}
	{% if documents.length > 0 %}
  	{{ documentList(documents) }}
	{% else %}
		No files uploaded
	{% endif %}
{% endmacro %}
