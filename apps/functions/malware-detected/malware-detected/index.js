import { sendDocumentStateAction } from './back-office-api-client.js';

/**
 * @param {string} uri
 * @returns {string | null}
 * */
const guidFromBlobURI = (uri) => {
	const match = uri.match(/^.+\/document-service-uploads\/application\/.+?\/(.+?)\//);
	return match?.[1] ?? null;
};

/**
 * @param {string} scanResult
 * @returns {string}
 * @throws {Error}
 * */
const statusFromScanResult = (scanResult) => {
	switch (scanResult) {
		case 'Malicious':
			return 'failed_virus_check';
		case 'No threats found':
			return 'not_checked';
		default:
			throw new Error(`could not map scan result '${scanResult}' to a document status`);
	}
};

/**
 * @type {import('@azure/functions').AzureFunction}
 * */
export default async function (context, eventGridEvent) {
	if (!eventGridEvent?.data) {
		throw new Error('received no input');
	}

	context.log('Received event: ', eventGridEvent.data);

	const guid = guidFromBlobURI(eventGridEvent.data.blobUri);
	if (!guid) {
		context.log.warn(`stopped: no GUID for blob with URI ${eventGridEvent.data.blobUri}`);
		return;
	}

	await sendDocumentStateAction(
		guid,
		statusFromScanResult(eventGridEvent.data.scanResultType),
		context.log
	);
}
