version: '3.7'

services:
  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: azure-sql-edge
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_SA_PASSWORD: 'Password123'
      MSSQL_PID: 'Developer'
    hostname: mssqlserver
    ports:
      - '1433:1433'
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:1433 || exit 1']
      interval: 10s
      retries: 5
      start_period: 40s

  back-office-api:
    image: node:20-alpine
    container_name: back-office-api
    environment:
      NODE_ENV: 'development'
      PORT: 3001
      DATABASE_URL: sqlserver://mssqlserver:1433;database=pins_development;user=sa;password=Password123;trustServerCertificate=true
    ports:
      - '3001:3001'
    working_dir: /opt/app
    volumes:
      - ../../../../package.json:/opt/app/package.json
      - ../../../../package-lock.json:/opt/app/package-lock.json
      - ../../../../node_modules:/opt/app/node_modules
      - ../../../../apps/api:/opt/app/apps/api
      - ../../../../packages:/opt/app/packages
    command: sh -c "npm run db:migrate --workspace=@pins/applications.api && npm run api"
    depends_on:
      - sqlserver
    links:
      - sqlserver

  # Run test after DB, API is up and DB migration is done
  applications-migration-functions:
    image: node:20-alpine
    container_name: applications-migration-functions
    environment:
      NODE_ENV: 'development'
      BACK_OFFICE_API_URL: 'http://back-office-api:3001'
    working_dir: /opt/app
    command: ['npm', 'run', 'test:start']
    depends_on:
      - back-office-api
      - sqlserver
