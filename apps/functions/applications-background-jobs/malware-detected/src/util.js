/**
 * @param {string} uri
 * @returns {string | null}
 * */
export const guidFromBlobURI = (uri) => {
	const match = uri.match(/^.+\/document-service-uploads\/application\/.+?\/(.+?)\//);
	return match?.[1] ?? null;
};

/**
 * @param {string} scanResult
 * @returns {string}
 * @throws {Error}
 * */
export const getPublishedStatusFromScanResult = (scanResult) => {
	switch (scanResult) {
		case 'Malicious':
			return 'failed_virus_check';
		case 'No threats found':
			return 'not_checked';
		default:
			throw new Error(`could not map scan result '${scanResult}' to a document status`);
	}
};

/**
 *
 * @param {NodeJS.ReadableStream} readableStream
 * @returns {Promise<string>}
 */
export const streamToString = async (readableStream) => {
	return new Promise((resolve, reject) => {
		const chunks = [];
		readableStream.on('data', (chunk) => {
			chunks.push(chunk.toString());
		});
		readableStream.on('end', () => {
			resolve(chunks.join(''));
		});
		readableStream.on('error', reject);
	});
};
