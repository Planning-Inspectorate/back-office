import { sendDocumentStateAction } from './src/back-office-api-client.js';
import { isScannedFileHtml, isUploadedHtmlValid } from './src/html-validation.js';
import { getPublishedStatusFromScanResult, guidFromBlobURI } from './src/util.js';

/**
 * @type {import('@azure/functions').AzureFunction}
 * */
export const index = async (context, eventGridEvent) => {
	if (!eventGridEvent?.data) {
		throw new Error('received no input');
	}

	context.log('Received event: ', eventGridEvent.data);

	const guid = guidFromBlobURI(eventGridEvent.data.blobUri);
	if (!guid) {
		context.log.warn(`stopped: no GUID for blob with URI ${eventGridEvent.data.blobUri}`);
		return;
	}

	if (await isScannedFileHtml(eventGridEvent.data.blobUri)) {
		const isValidHtml = await isUploadedHtmlValid(eventGridEvent.data.blobUri);
		eventGridEvent.data.scanResultType = isValidHtml
			? eventGridEvent.data.scanResultType
			: 'Malicious';
	}

	const publishedStatusFromScanResult = getPublishedStatusFromScanResult(
		eventGridEvent.data.scanResultType
	);
	await sendDocumentStateAction(guid, publishedStatusFromScanResult, context.log);
};
