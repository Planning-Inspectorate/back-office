{
	"swagger": "2.0",
	"info": {
		"version": "2.0",
		"title": "PINS Back Office API",
		"description": "PINS Back Office API documentation from Swagger"
	},
	"host": "",
	"basePath": "",
	"tags": [
		{
			"name": "",
			"description": ""
		}
	],
	"schemes": [],
	"securityDefinitions": {},
	"paths": {
		"/migration/{modelType}": {
			"post": {
				"tags": ["Migration"],
				"description": "Updates document status from state machine",
				"parameters": [
					{
						"name": "modelType",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Model type to migrate"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Models",
						"schema": {
							"type": "array",
							"example": [],
							"items": {}
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Models successfully migrated"
					}
				}
			}
		},
		"/applications/": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all applications",
				"parameters": [
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of applications",
						"schema": {
							"$ref": "#/definitions/ApplicationSummaryMany"
						}
					}
				}
			}
		},
		"/applications": {
			"post": {
				"tags": ["Applications"],
				"description": "Creates new application",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Application Details",
						"schema": {
							"$ref": "#/definitions/CreateApplication"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "ID of application",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"applicantId": {
									"type": "number",
									"example": 2
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/reference/{reference}": {
			"get": {
				"tags": ["Applications"],
				"description": "Returns the application by its string reference",
				"parameters": [
					{
						"name": "reference",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Application reference"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Application Details",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"reference": {
									"type": "string",
									"example": "AB0110203"
								},
								"status": {
									"type": "string",
									"example": "Pre-Application"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/start": {
			"post": {
				"tags": ["Applications"],
				"description": "Moves application from Draft state to Pre-Application state",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Application Details",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"reference": {
									"type": "string",
									"example": "AB0110203"
								},
								"status": {
									"type": "string",
									"example": "Pre-Application"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all of the application details",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Application details",
						"example": "{ &ldquo;title&rdquo;:true, &ldquo;description&rdquo;:true, &ldquo;reference&rdquo;:true, &ldquo;status&rdquo;:true, &ldquo;caseEmail&rdquo;:true, &ldquo;sector&rdquo;:true, &ldquo;subSector&rdquo;:true, &ldquo;applicant&rdquo;:true, &ldquo;geographicalInformation&rdquo;:true, &ldquo;keyDates&rdquo;:true }",
						"type": "string"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "IDs of application",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"reference": {
									"type": "string",
									"example": "BC010001"
								},
								"title": {
									"type": "string",
									"example": "Office Use Test Application 1"
								},
								"description": {
									"type": "string",
									"example": "A description of test case 1 which is a case of subsector type Office Use"
								},
								"status": {
									"type": "string",
									"example": "Withdrawn"
								},
								"caseEmail": {
									"type": "string",
									"example": "caseemail@gmail.com"
								},
								"sector": {
									"type": "object",
									"properties": {}
								},
								"subSector": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string",
											"example": "office_use"
										},
										"abbreviation": {
											"type": "string",
											"example": "BC01"
										},
										"displayNameEn": {
											"type": "string",
											"example": "Office Use"
										},
										"displayNameCy": {
											"type": "string",
											"example": "Office Use"
										}
									}
								},
								"applicant": {
									"type": "object",
									"properties": {}
								},
								"geographicalInformation": {
									"type": "object",
									"properties": {
										"mapZoomLevel": {
											"type": "object",
											"properties": {
												"id": {
													"type": "number",
													"example": 5
												},
												"name": {
													"type": "string",
													"example": "district"
												},
												"displayNameEn": {
													"type": "string",
													"example": "District"
												},
												"displayNameCy": {
													"type": "string",
													"example": "District"
												}
											}
										}
									}
								},
								"locationDescription": {
									"type": "string",
									"example": "location description"
								},
								"gridReference": {
									"type": "object",
									"properties": {}
								},
								"regions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {}
									}
								},
								"keyDates": {
									"type": "object",
									"properties": {}
								},
								"hasUnpublishedChanges": {
									"type": "boolean",
									"example": false
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Application Details",
						"schema": {
							"$ref": "#/definitions/UpdateApplication"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "ID of application",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"applicantId": {
									"type": "number",
									"example": 2
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/publish": {
			"patch": {
				"tags": ["Applications"],
				"description": "publish application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "response will have the date that the case was published as a timestamp",
						"schema": {
							"type": "object",
							"properties": {
								"publishedDate": {
									"type": "number",
									"example": 1673873105
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/unpublish": {
			"patch": {
				"tags": ["Applications"],
				"description": "unpublish application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "response will have the date that the case was unpublished as a timestamp",
						"schema": {
							"type": "object",
							"properties": {
								"publishedDate": {
									"type": "number",
									"example": 1673873105
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets list of representations on an application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page to show",
						"required": false,
						"type": "integer",
						"example": 1,
						"minimum": 1
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "Page size",
						"required": false,
						"type": "integer",
						"example": 25,
						"minimum": 1,
						"maximum": 100
					},
					{
						"name": "searchTerm",
						"in": "query",
						"description": "Search Term",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "Filter by status",
						"required": false,
						"schema": {
							"type": "array",
							"example": [""],
							"items": {
								"type": "string"
							}
						},
						"style": "form",
						"explode": true
					},
					{
						"name": "under18",
						"in": "query",
						"description": "Filter by under18",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort by field. +field for ASC, -field for DESC",
						"required": false,
						"type": "string"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Representations",
						"schema": {
							"type": "object",
							"properties": {
								"page": {
									"type": "number",
									"example": 1
								},
								"pageSize": {
									"type": "number",
									"example": 25
								},
								"pageCount": {
									"type": "number",
									"example": 1
								},
								"itemCount": {
									"type": "number",
									"example": 100
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/RepresentationSummary"
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"post": {
				"tags": ["Applications"],
				"description": "Creates a representation for an application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Representation Details",
						"schema": {
							"type": "object",
							"properties": {
								"status": {
									"type": "string",
									"example": "DRAFT"
								},
								"redacted": {
									"type": "boolean",
									"example": false
								},
								"received": {
									"type": "string",
									"example": "2023-03-14T14:28:25.704Z"
								},
								"originalRepresentation": {
									"type": "string",
									"example": "This is the representation text"
								},
								"representedType": {
									"type": "string",
									"example": "PERSON"
								},
								"represented": {
									"type": "object",
									"properties": {
										"firstName": {
											"type": "string",
											"example": "Peter"
										},
										"lastName": {
											"type": "string",
											"example": "Biggins"
										},
										"organisationName": {
											"type": "string",
											"example": ""
										},
										"jobTitle": {
											"type": "string",
											"example": ""
										},
										"email": {
											"type": "string",
											"example": "peter.bigins@dummy.email"
										},
										"phoneNumber": {
											"type": "string",
											"example": "0123456789"
										},
										"address": {
											"type": "object",
											"properties": {
												"addressLine1": {
													"type": "string",
													"example": ""
												},
												"addressLine2": {
													"type": "string",
													"example": ""
												},
												"town": {
													"type": "string",
													"example": ""
												},
												"county": {
													"type": "string",
													"example": ""
												},
												"postcode": {
													"type": "string",
													"example": ""
												},
												"country": {
													"type": "string",
													"example": ""
												}
											}
										},
										"under18": {
											"type": "boolean",
											"example": false
										}
									}
								},
								"representative": {
									"type": "object",
									"properties": {}
								}
							}
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"status": {
									"type": "string",
									"example": "DRAFT"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations/{repId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets a representation on an application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "repId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Representation ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"reference": {
									"type": "string",
									"example": "BC0110001-2"
								},
								"status": {
									"type": "string",
									"example": "VALID"
								},
								"redacted": {
									"type": "boolean",
									"example": true
								},
								"received": {
									"type": "string",
									"example": "2023-03-14T14:28:25.704Z"
								},
								"originalRepresentation": {
									"type": "string",
									"example": ""
								},
								"redactedRepresentation": {
									"type": "string",
									"example": ""
								},
								"redactedBy": {
									"type": "object",
									"properties": {}
								},
								"represented": {
									"type": "object",
									"properties": {}
								},
								"representative": {
									"type": "object",
									"properties": {}
								},
								"attachments": {
									"type": "array",
									"example": [],
									"items": {}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates a representation for an application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "repId",
						"in": "path",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Representation Details",
						"schema": {
							"type": "object",
							"properties": {
								"status": {
									"type": "string",
									"example": "DRAFT"
								},
								"redacted": {
									"type": "boolean",
									"example": false
								},
								"redactedBy": {
									"type": "string",
									"example": "A users name who has performed a redaction"
								},
								"redactedNotes": {
									"type": "string",
									"example": "A string if redacted text"
								},
								"received": {
									"type": "string",
									"example": "2023-03-14T14:28:25.704Z"
								},
								"originalRepresentation": {
									"type": "string",
									"example": "This is the representation text"
								},
								"representedType": {
									"type": "string",
									"example": "PERSON"
								},
								"represented": {
									"type": "object",
									"properties": {
										"firstName": {
											"type": "string",
											"example": "Peter"
										},
										"lastName": {
											"type": "string",
											"example": "Biggins"
										},
										"organisationName": {
											"type": "string",
											"example": ""
										},
										"jobTitle": {
											"type": "string",
											"example": ""
										},
										"email": {
											"type": "string",
											"example": "peter.bigins@dummy.email"
										},
										"phoneNumber": {
											"type": "string",
											"example": "0123456789"
										},
										"address": {
											"type": "object",
											"properties": {
												"addressLine1": {
													"type": "string",
													"example": ""
												},
												"addressLine2": {
													"type": "string",
													"example": ""
												},
												"town": {
													"type": "string",
													"example": ""
												},
												"county": {
													"type": "string",
													"example": ""
												},
												"postcode": {
													"type": "string",
													"example": ""
												},
												"country": {
													"type": "string",
													"example": ""
												}
											}
										},
										"under18": {
											"type": "boolean",
											"example": false
										}
									}
								},
								"representative": {
									"type": "object",
									"properties": {}
								}
							}
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"status": {
									"type": "string",
									"example": "DRAFT"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations/download": {
			"get": {
				"tags": ["Applications"],
				"description": "Downloads VALID representations on an application",
				"produces": ["text/csv"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					}
				],
				"responses": {
					"200": {
						"description": "Representations CSV"
					}
				}
			}
		},
		"/applications/{id}/representations/publishable": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets publishable representations for an application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					}
				],
				"responses": {
					"200": {
						"description": "Representations",
						"schema": {
							"type": "object",
							"properties": {
								"previouslyPublished": {
									"type": "boolean",
									"example": false
								},
								"itemCount": {
									"type": "number",
									"example": 100
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/RepresentationSummary"
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations/publish": {
			"patch": {
				"tags": ["Applications"],
				"description": "Publishes representations on an application that are VALID or PUBLISHED with unpublishedUpdates",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Representation IDs to publish, and user performing action",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"representationIds": {
									"type": "array",
									"example": [123, 124, 125],
									"items": {
										"type": "number"
									}
								},
								"actionBy": {
									"type": "string",
									"example": "Joe Bloggs"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"publishedRepIds": {
									"type": "array",
									"example": [123, 134, 125],
									"items": {
										"type": "number"
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"400": {
						"description": "Error: Bad Request",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					}
				}
			}
		},
		"/applications/{id}/representations/{repId}/redact": {
			"patch": {
				"tags": ["Applications"],
				"description": "Redact a representation for an application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "repId",
						"in": "path",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Representation redact details \n type can be REDACT_STATUS or REDACT. If REDACT_STATUS then redactedRepresentation is not a mandatory field but redactStatus will be.",
						"schema": {
							"type": "object",
							"properties": {
								"actionBy": {
									"type": "string",
									"example": "Joe Bloggs"
								},
								"redactedRepresentation": {
									"type": "string",
									"example": "This is the original Rep"
								},
								"notes": {
									"type": "string",
									"example": "Removed PII from original"
								},
								"type": {
									"type": "string",
									"example": "REDACTION"
								},
								"redacted": {
									"type": "boolean",
									"example": true
								},
								"redactStatus": {
									"type": "boolean",
									"example": true
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"status": {
									"type": "string",
									"example": "DRAFT"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations/{repId}/attachment": {
			"post": {
				"tags": ["Applications"],
				"description": "Add a representation attachment for an application document",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "repId",
						"in": "path",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Details",
						"schema": {
							"type": "object",
							"properties": {
								"documentId": {
									"type": "string",
									"example": "a guid"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"attachmentId": {
									"type": "number",
									"example": 1
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations/{repId}/attachment/{attachmentId}": {
			"delete": {
				"tags": ["Applications"],
				"description": "Delete a representation attachment for an application document",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "repId",
						"in": "path",
						"required": true,
						"type": "string"
					},
					{
						"name": "attachmentId",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Attachment",
						"schema": {
							"type": "object",
							"properties": {
								"attachmentId": {
									"type": "number",
									"example": 1
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/representations/{repId}/status": {
			"patch": {
				"tags": ["Applications"],
				"description": "Update a representation status for an application and create an action",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "repId",
						"in": "path",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Status body to update a rep stats and create a rep action",
						"schema": {
							"type": "object",
							"properties": {
								"status": {
									"type": "string",
									"example": "INVALID"
								},
								"notes": {
									"type": "string",
									"example": "some notes"
								},
								"updatedBy": {
									"type": "string",
									"example": "Joe Bloggs"
								},
								"invalidReason": {
									"type": "string",
									"example": "Duplicate"
								},
								"referredTo": {
									"type": "string",
									"example": "Inspector"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Representation",
						"schema": {
							"type": "object",
							"properties": {
								"repId": {
									"type": "number",
									"example": 1
								},
								"status": {
									"type": "string",
									"example": "INVALID"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/metadata": {
			"post": {
				"tags": ["Applications"],
				"description": "Create or update the document version metadata for a document",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Details",
						"schema": {
							"$ref": "#/definitions/DocumentVersionUpsertRequestBody"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "The metadata has been successfully stored.",
						"schema": {
							"$ref": "#/definitions/DocumentDetails"
						}
					}
				}
			}
		},
		"/applications/{id}/documents": {
			"post": {
				"tags": ["Applications"],
				"description": "Saves new documents to database and returns document info and location in Blob Storage",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Details",
						"schema": {
							"$ref": "#/definitions/DocumentsToSaveManyRequestBody"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Documents that have been saved",
						"schema": {
							"$ref": "#/definitions/DocumentAndBlobInfoManyResponse"
						}
					},
					"206": {
						"description": "Some documents failed to save while others succeeded",
						"schema": {
							"$ref": "#/definitions/DocumentsUploadPartialFailed"
						}
					},
					"409": {
						"description": "All documents failed to upload",
						"schema": {
							"$ref": "#/definitions/DocumentsUploadFailed"
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates the status and/or redaction status on an array of documents",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Update Details",
						"schema": {
							"$ref": "#/definitions/DocumentsToUpdateRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Documents that have been updated",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"guid": {
										"type": "string",
										"example": "0084b156-006b-48b1-a47f-e7176414db29"
									},
									"status": {
										"type": "string",
										"example": "not_checked"
									},
									"redactedStatus": {
										"type": "string",
										"example": "redacted"
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"400": {
						"description": "Example of an error response",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"get": {
				"tags": ["Applications"],
				"description": "search documents on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The page number to return, defaults to 1",
						"example": 1,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The number of results per page, defaults to 25",
						"example": 25,
						"type": "integer"
					},
					{
						"name": "criteria",
						"in": "query",
						"description": "search criteria",
						"example": "search string",
						"type": "string",
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "An paginated data set of matching documents and their properties",
						"schema": {
							"$ref": "#/definitions/PaginatedDocumentDetails"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/documents/unpublish": {
			"patch": {
				"tags": ["Applications"],
				"description": "Unpublish a document by its GUID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Details",
						"schema": {
							"$ref": "#/definitions/DocumentsToUnpublishRequestBody"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Documents that have been unpublished",
						"schema": {
							"$ref": "#/definitions/DocumentsUnpublishResponseBody"
						}
					},
					"206": {
						"description": "Some documents failed to unpublish while others succeeded",
						"schema": {
							"$ref": "#/definitions/DocumentsUnpublishResponseBody"
						}
					},
					"409": {
						"description": "All documents failed to unpublish",
						"schema": {
							"$ref": "#/definitions/DocumentsUnpublishResponseBody"
						}
					}
				}
			}
		},
		"/applications/{id}/document/{guid}/add-version": {
			"post": {
				"tags": ["Applications"],
				"description": "Adds a new file version to an existing document, and returns document info and location in Blob Storage",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID here"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Details",
						"schema": {
							"$ref": "#/definitions/DocumentToSave"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document that has been saved",
						"schema": {
							"$ref": "#/definitions/DocumentAndBlobInfoResponse"
						}
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/version/{version}/mark-as-published": {
			"post": {
				"tags": ["Applications"],
				"description": "Completes publishing to mark as document as Published",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Document GUID"
					},
					{
						"name": "version",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Version"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Mark as Published Request",
						"schema": {
							"$ref": "#/definitions/DocumentMarkAsPublishedRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Updated document response",
						"schema": {
							"$ref": "#/definitions/DocumentPropertiesWithVersionWithCase"
						}
					},
					"400": {
						"description": "Example of a missing body error response",
						"schema": {
							"$ref": "#/definitions/DocumentMarkAsPublishedBadRequest"
						}
					},
					"404": {
						"description": "Example of an error response",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/version/{version}/mark-as-unpublished": {
			"post": {
				"tags": ["Applications"],
				"description": "Completes unpublishing to mark as document as Unpublished",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Document GUID"
					},
					{
						"name": "version",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Version"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Updated document response",
						"schema": {
							"$ref": "#/definitions/DocumentPropertiesWithVersionWithCase"
						}
					},
					"404": {
						"description": "Example of an error response",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/properties": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the properties of a single file on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document properties",
						"schema": {
							"$ref": "#/definitions/DocumentProperties"
						}
					}
				}
			}
		},
		"/applications/documents/{guid}/properties": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the properties of a single file",
				"parameters": [
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					}
				],
				"responses": {
					"200": {
						"description": "Document properties",
						"schema": {
							"$ref": "#/definitions/DocumentProperties"
						}
					}
				}
			}
		},
		"/applications/{id}/documents/properties": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the properties of the specified files",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guids",
						"in": "query",
						"description": "A list of guids",
						"example": [1, 2],
						"type": "string"
					},
					{
						"name": "published",
						"in": "query",
						"description": "Only return published documents",
						"type": "boolean",
						"example": false
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document properties",
						"schema": {
							"$ref": "#/definitions/DocumentProperties"
						}
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/version/{version}/properties": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the properties of a single file on a case by version id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "version",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "version of the required document here"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document properties",
						"schema": {
							"$ref": "#/definitions/DocumentProperties"
						}
					}
				}
			}
		},
		"/applications/document/{guid}/versions": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the properties and all versions of a single file on a case",
				"parameters": [
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document properties",
						"schema": {
							"$ref": "#/definitions/DocumentPropertiesWithAllVersionWithAuditHistory"
						}
					}
				}
			}
		},
		"/applications/documents/{guid}/path": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the folder path of a document, as an array",
				"parameters": [
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Array of folders which consitute the path the document is located in",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "number",
										"example": 1
									},
									"displayNameEn": {
										"type": "string",
										"example": "Post-decision"
									},
									"displayOrder": {
										"type": "number",
										"example": 1100
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/revert-published-status": {
			"post": {
				"tags": ["Applications"],
				"description": "Reverts the published status of a document to the previous status",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the document"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/applications/{id}/documents/{guid}/delete": {
			"post": {
				"tags": ["Applications"],
				"description": "Deletes a document associated with a specific application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "guid",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "guid of the required document here"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "The document has been successfully soft-deleted and is no longer accessible.",
						"schema": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string",
									"example": "object"
								},
								"properties": {
									"type": "object",
									"properties": {
										"isDeleted": {
											"type": "object",
											"properties": {
												"type": {
													"type": "string",
													"example": "boolean"
												},
												"description": {
													"type": "string",
													"example": "Indicates whether the document has been successfully soft-deleted."
												}
											}
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/documents/ready-to-publish": {
			"post": {
				"tags": ["Applications"],
				"description": "Gets all documents that are ready to publish for the case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "document pagination parameters",
						"schema": {
							"$ref": "#/definitions/PaginationRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "An paginated data set of documents and their properties",
						"schema": {
							"$ref": "#/definitions/PaginatedDocumentDetails"
						}
					}
				}
			}
		},
		"/applications/{id}/documents/publish": {
			"patch": {
				"tags": ["Applications"],
				"description": "Publishes the documents selected from the Ready to Publish queue",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Array of document guids to publish",
						"schema": {
							"$ref": "#/definitions/DocumentsToPublishRequestBody"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Documents that have been published",
						"schema": {
							"$ref": "#/definitions/DocumentsPublished"
						}
					},
					"400": {
						"description": "Example of an error response",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"documents": {
											"type": "string",
											"example": "Unknown document guid 0084b156-006b-48b1-a47f-e7176414db29"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/folders": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets list of top level folders on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "all",
						"in": "query",
						"description": "Should retrieve the full list of folders, not just root level ones",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "IDs of application",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "number",
										"example": 1
									},
									"displayNameEn": {
										"type": "string",
										"example": "Post-decision"
									},
									"displayOrder": {
										"type": "number",
										"example": 1100
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/folders/{folderId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets details of a single folder on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "folderId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Id of current folder"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "IDs of application",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "number",
									"example": 1
								},
								"displayNameEn": {
									"type": "string",
									"example": "Post-decision"
								},
								"displayOrder": {
									"type": "number",
									"example": 1100
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/folders/{folderId}/parent-folders": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the parent folder path list for a folder on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "folderId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Id of current folder"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "IDs of application",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "number",
										"example": 2
									},
									"displayNameEn": {
										"type": "string",
										"example": "Acceptance"
									},
									"displayOrder": {
										"type": "number",
										"example": 200
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/folders/{folderId}/documents": {
			"post": {
				"tags": ["Applications"],
				"description": "Gets paginated array of documents in a folder on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "folderId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Id of current folder"
					},
					{
						"name": "body",
						"in": "body",
						"description": "document pagination parameters",
						"schema": {
							"$ref": "#/definitions/PaginationRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "An paginated data set of documents and their properties",
						"schema": {
							"$ref": "#/definitions/PaginatedDocumentDetails"
						}
					}
				}
			}
		},
		"/applications/{id}/project-updates/{projectUpdateId}/notification-logs": {
			"get": {
				"tags": ["Applications"],
				"description": "List notification logs",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "projectUpdateId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Project Update ID"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The page number to return, defaults to 1",
						"example": 1,
						"type": "string"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The number of results per page, defaults to 25",
						"example": 25,
						"type": "string"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Notification logs",
						"schema": {
							"$ref": "#/definitions/ProjectUpdateNotificationLogList"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/ProjectUpdateNotificationLogListBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			},
			"post": {
				"tags": ["Applications"],
				"description": "Add notification logs",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "projectUpdateId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Project Update ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Logs to create",
						"schema": {
							"$ref": "#/definitions/ProjectUpdateNotificationLogCreateRequest"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Created",
						"schema": {
							"type": "object",
							"properties": {
								"count": {
									"type": "number",
									"example": 1
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/ProjectUpdateNotificationLogCreateBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/project-updates": {
			"get": {
				"tags": ["Applications"],
				"description": "Get project updates across applications",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "The page number to return, defaults to 1",
						"example": 1,
						"type": "string"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The number of results per page, defaults to 25",
						"example": 25,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "Filter by status",
						"required": false,
						"type": "string"
					},
					{
						"name": "publishedBefore",
						"in": "query",
						"description": "Filter by published date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "sentToSubscribers",
						"in": "query",
						"description": "Filter by sent to subscribers",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of project updates",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdates"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdatesListBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/project-updates/{projectUpdateId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Get a project update by ID",
				"parameters": [
					{
						"name": "projectUpdateId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Project Update ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "The project update",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdate"
						}
					},
					"404": {
						"description": "Not found",
						"schema": {
							"$ref": "#/definitions/NotFound"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/{id}/project-updates": {
			"get": {
				"tags": ["Applications"],
				"description": "List the project updates for this application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The page number to return, defaults to 1",
						"example": 1,
						"type": "string"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The number of results per page, defaults to 25",
						"example": 25,
						"type": "string"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort by field. +field for ASC, -field for DESC",
						"required": false,
						"type": "string"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of project updates",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdates"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdatesListBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			},
			"post": {
				"tags": ["Applications"],
				"description": "Create a project update for this application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Project update parameters",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdateCreateRequest"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Created project update",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdate"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdateCreateBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/{id}/project-updates/{projectUpdateId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Get a project update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "projectUpdateId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Project Update ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "The project update",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdate"
						}
					},
					"404": {
						"description": "Not found",
						"schema": {
							"$ref": "#/definitions/NotFound"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Update a project update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "projectUpdateId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Project Update ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Project update parameters",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdateUpdateRequest"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "The project update",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdate"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/ApplicationProjectUpdateCreateBadRequest"
						}
					},
					"404": {
						"description": "Not found",
						"schema": {
							"$ref": "#/definitions/NotFound"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			},
			"delete": {
				"tags": ["Applications"],
				"description": "Delete a project update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "projectUpdateId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Project Update ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"204": {
						"description": "Successfully deleted"
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/documents/{documentGUID}/status": {
			"patch": {
				"tags": ["Applications"],
				"description": "Updates document status from state machine",
				"parameters": [
					{
						"name": "documentGUID",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Document GUID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Machine Action",
						"schema": {
							"type": "object",
							"properties": {
								"machineAction": {
									"type": "string",
									"example": "awaiting_virus_check"
								}
							}
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document status updated",
						"schema": {
							"type": "object",
							"properties": {
								"caseId": {
									"type": "number",
									"example": 1
								},
								"guid": {
									"type": "string",
									"example": "a1b2c4d4-7ce5-410c-937e-28926dd7ab24"
								},
								"status": {
									"type": "string",
									"example": "awaiting_virus_check"
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/documents/process-html": {
			"post": {
				"tags": ["Applications"],
				"description": "Accepts an HTML string and returns a different HTML string matching the YouTube video template for Front Office",
				"parameters": [
					{
						"name": "html",
						"in": "body",
						"description": "HTML string",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {}
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Document status updated",
						"schema": {
							"$ref": "#/definitions/DocumentHTMLResponse"
						}
					},
					"400": {
						"description": "HTML string does not contain a YouTube iframe",
						"schema": {
							"$ref": "#/definitions/DocumentBadHTMLResponse"
						}
					}
				}
			}
		},
		"/applications/case-stage": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all possible stages for a case",
				"parameters": [
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of stages for a case",
						"schema": {
							"$ref": "#/definitions/CaseStages"
						}
					}
				}
			}
		},
		"/applications/search": {
			"post": {
				"tags": ["Applications"],
				"description": "Gets all applications as per search criteria",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "case query parameters",
						"schema": {
							"$ref": "#/definitions/ApplicationsSearchCriteriaRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of applications as per search criteria",
						"schema": {
							"$ref": "#/definitions/ApplicationsSearchResponse"
						}
					}
				}
			}
		},
		"/applications/region": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all regions available",
				"parameters": [
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of regions",
						"schema": {
							"$ref": "#/definitions/RegionsForApplications"
						}
					}
				}
			}
		},
		"/applications/sector": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all sectors and sub-sectors",
				"parameters": [
					{
						"name": "obj",
						"in": "query",
						"description": "Sector Name",
						"schema": {
							"type": "object",
							"properties": {
								"sectorName": {
									"type": "string",
									"example": ""
								}
							}
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of sectors or sub-sectors",
						"schema": {
							"$ref": "#/definitions/Sectors"
						}
					}
				}
			}
		},
		"/applications/zoom-level": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all map zoom levels available",
				"parameters": [
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of map zoom levels",
						"schema": {
							"$ref": "#/definitions/MapZoomLevelForApplications"
						}
					}
				}
			}
		},
		"/applications/examination-timetable-type": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all examination timetable types available",
				"parameters": [
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of examination timetable types",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableTypes"
						}
					}
				}
			}
		},
		"/applications/examination-timetable-items/case/{caseId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all examination timetable items for the case",
				"parameters": [
					{
						"name": "caseId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of examination timetable items",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableWithItems"
						}
					}
				}
			}
		},
		"/applications/examination-timetable-items/{id}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets examination timetable item by id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Examination timetable item ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Examination timetable item",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableItemWithExamTimetable"
						}
					}
				}
			},
			"delete": {
				"tags": ["Applications"],
				"description": "Delete examination timetable item by id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Examination timetable item ID"
					},
					{
						"name": "body",
						"in": "query",
						"type": "string"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Examination timetable item successfully deleted"
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates an examination timetable item",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Examination timetable item ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Examination timetable item update details",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableItemUpdateRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Examination timetable item",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableItemSaveResponse"
						}
					},
					"400": {
						"description": "Example of an error response",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing examination timetable item"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/examination-timetable-items": {
			"post": {
				"tags": ["Applications"],
				"description": "Create an examination timetable item for the case",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "New examination timetable item",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableItemCreateRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Created examination timetable item",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableItemSaveResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/ExaminationTimetableItemSaveBadRequest"
						}
					}
				}
			}
		},
		"/applications/examination-timetable-items/publish/{id}": {
			"patch": {
				"tags": ["Applications"],
				"description": "Publish examination timetable items for the case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Examination timetable items published",
						"schema": {
							"type": "object",
							"properties": {
								"success": {
									"type": "boolean",
									"example": true
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/examination-timetable-items/unpublish/{id}": {
			"patch": {
				"tags": ["Applications"],
				"description": "Unpublish examination timetable items for the case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Examination timetable items unpublished",
						"schema": {
							"type": "object",
							"properties": {
								"success": {
									"type": "boolean",
									"example": true
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/s51-advice": {
			"post": {
				"tags": ["Applications"],
				"description": "Create an S51 advice for the case",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Payload to create S51 advice",
						"schema": {
							"$ref": "#/definitions/S51AdviceCreateRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Created S51 advice",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsWithCaseId"
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice/{adviceId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets an S51 Advice record",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "adviceId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "S51 advice ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "An S51 Advice on a case",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsWithDocumentDetails"
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates redacted status and / or published status for a single S51 Advice on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "adviceId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Advice ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					},
					{
						"name": "body",
						"in": "body",
						"description": "S51 Advice update parameters",
						"schema": {
							"$ref": "#/definitions/S51AdviceUpdateRequestBody"
						},
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "The updated S51 Advice record",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsWithCaseId"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Applications"],
				"description": "Soft-deletes an S51 Advice by id, and any associated S51 Advice documents",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "adviceId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "S51 Advice ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "S51 Advice successfully soft-deleted",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsWithCaseId"
						}
					},
					"400": {
						"description": "S51 Advice successfully soft-deleted",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"adviceId": {
											"type": "string",
											"example": "You must first unpublish S51 advice before deleting it."
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets paginated array of undeleted S51 Advice(s) on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The page number required",
						"required": true,
						"type": "number"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The number of items per page",
						"required": true,
						"type": "number"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "A paginated data set of S51 Advices and their properties",
						"schema": {
							"$ref": "#/definitions/S51AdvicePaginatedResponse"
						}
					},
					"400": {
						"description": "Error: Bad Request",
						"schema": {
							"$ref": "#/definitions/S51AdvicePaginatedBadRequest"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates redacted status and / or published status for an array of S51 Advice(s) on a case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "S51 Advice update parameters",
						"schema": {
							"$ref": "#/definitions/S51AdviceMultipleUpdateRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "S51 Advice(s) that have been updated",
						"schema": {
							"$ref": "#/definitions/S51AdviceMultipleUpdateResponseBody"
						}
					},
					"400": {
						"description": "Error: Bad Request",
						"schema": {
							"$ref": "#/definitions/S51AdviceUpdateBadRequest"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice/{adviceId}/documents": {
			"post": {
				"tags": ["Applications"],
				"description": "Add S51 advice documents",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "adviceId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "S51 advice ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Document Details",
						"schema": {
							"$ref": "#/definitions/DocumentsToSaveManyRequestBody"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "S51 Documents that have been saved",
						"schema": {
							"$ref": "#/definitions/DocumentAndBlobInfoManyResponse"
						}
					},
					"206": {
						"description": "Some documents failed to save while others succeeded",
						"schema": {
							"$ref": "#/definitions/DocumentsUploadPartialFailed"
						}
					},
					"409": {
						"description": "All documents failed to upload",
						"schema": {
							"$ref": "#/definitions/DocumentsUploadFailed"
						}
					}
				}
			},
			"get": {
				"tags": ["Applications"],
				"description": "Get S51 advice documents for an S51 Advice record",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "adviceId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "S51 advice ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "S51 Documents",
						"schema": {
							"$ref": "#/definitions/DocumentAndBlobInfoManyResponse"
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice/ready-to-publish": {
			"post": {
				"tags": ["Applications"],
				"description": "Gets all S51 that are ready to publish for the case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "s51 pagination parameters",
						"schema": {
							"$ref": "#/definitions/PaginationRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "An paginated data set of s51 advices and their properties",
						"schema": {
							"$ref": "#/definitions/S51AdvicePaginatedResponseWithDocumentDetails"
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice/remove-queue-item": {
			"post": {
				"tags": ["Applications"],
				"description": "Removes an S51 Advice item from the publishing queue",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "S51 Advice Id",
						"schema": {
							"type": "object",
							"properties": {
								"adviceId": {
									"type": "number",
									"example": 1
								}
							}
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Updated S51 Advice record",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsWithCaseId"
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice/title-unique/{title}": {
			"head": {
				"tags": ["Applications"],
				"description": "Checks whether an S51 title is unique to this case",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "title",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "S51 Title"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "valid unique S51 Advice title",
						"schema": null
					},
					"400": {
						"description": "Error: Bad Request - title is not unique",
						"schema": null
					},
					"404": {
						"description": "Error: Not Found - invalid case id",
						"schema": null
					}
				}
			}
		},
		"/applications/{id}/s51-advice/publish-queue-items": {
			"post": {
				"tags": ["Applications"],
				"description": "Publishes a list of items from the publish queue",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Payload to publish items",
						"schema": {
							"$ref": "#/definitions/S51AdvicePublishRequestBody"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Array of all updated S51 Advice records",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsArrayWithCaseId"
						}
					}
				}
			}
		},
		"/applications/{id}/s51-advice/{adviceId}/unpublish": {
			"patch": {
				"tags": ["Applications"],
				"description": "Unpublish s51 advice",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "adviceId",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Advice ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Unpublished S51 Advice record",
						"schema": {
							"$ref": "#/definitions/S51AdviceDetailsWithCaseId"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/subscriptions": {
			"post": {
				"tags": ["Applications"],
				"description": "Get a subscription",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "subscription parameters",
						"schema": {
							"$ref": "#/definitions/SubscriptionGetRequest"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Subscription",
						"schema": {
							"$ref": "#/definitions/Subscription"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/SubscriptionGetBadRequest"
						}
					},
					"404": {
						"description": "Not found",
						"schema": {
							"$ref": "#/definitions/SubscriptionNotFound"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			},
			"put": {
				"tags": ["Applications"],
				"description": "Create or update a subscription",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "subscription parameters",
						"schema": {
							"$ref": "#/definitions/SubscriptionCreateRequest"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Updated subscription",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"example": "number"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"201": {
						"description": "Created subscription",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"example": "number"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/SubscriptionCreateBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/subscriptions/list": {
			"get": {
				"tags": ["Applications"],
				"description": "List subscriptions based on criteria",
				"parameters": [
					{
						"name": "caseReference",
						"in": "query",
						"description": "subscription caseReference",
						"type": "string",
						"required": false
					},
					{
						"name": "type",
						"in": "query",
						"description": "subscription type",
						"type": "string",
						"required": false
					},
					{
						"name": "endAfter",
						"in": "query",
						"description": "subscriptions which end after this date (or have no end date)",
						"format": "date-time",
						"type": "string",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "The page number to return, defaults to 1",
						"type": "integer",
						"example": 1
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "The number of results per page, defaults to 25",
						"type": "integer",
						"example": 25
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Subscription",
						"schema": {
							"$ref": "#/definitions/Subscriptions"
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/SubscriptionsListBadRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/subscriptions/{id}": {
			"patch": {
				"tags": ["Applications"],
				"description": "Update a subscription",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Subscription ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "subscription parameters",
						"schema": {
							"$ref": "#/definitions/SubscriptionUpdateRequest"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Updated subscription",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"example": "number"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					},
					"400": {
						"description": "Bad request",
						"schema": {
							"$ref": "#/definitions/SubscriptionUpdateBadRequest"
						}
					},
					"404": {
						"description": "Not found",
						"schema": {
							"$ref": "#/definitions/SubscriptionNotFound"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/InternalError"
						}
					}
				}
			}
		},
		"/applications/{id}/key-dates": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets the Key Dates for an NSIP Application",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of Key Dates",
						"schema": {
							"$ref": "#/definitions/ApplicationKeyDates"
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Updates the key dates for an NSIP Application. Only the provided sections will be updated.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application ID"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Key Dates update parameters",
						"schema": {
							"$ref": "#/definitions/ApplicationKeyDates"
						},
						"required": true
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "New updated Key Dates for the entire project",
						"schema": {
							"$ref": "#/definitions/ApplicationKeyDates"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/project-team": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets all project team members of a case ",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "List of project team members",
						"schema": {
							"$ref": "#/definitions/ProjectTeamMembers"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/project-team/{userId}": {
			"get": {
				"tags": ["Applications"],
				"description": "Gets project team member by azure reference id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Azure reference for the user"
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Project team member",
						"schema": {
							"$ref": "#/definitions/ProjectTeamMember"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			},
			"patch": {
				"tags": ["Applications"],
				"description": "Change role of project team member",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Azure reference for the user"
					},
					{
						"name": "role",
						"in": "body",
						"description": "New role",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserRolePayload"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Project team member",
						"schema": {
							"$ref": "#/definitions/ProjectTeamMember"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		},
		"/applications/{id}/project-team/remove-member": {
			"post": {
				"tags": ["Applications"],
				"description": "Remove team member from project",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer",
						"description": "Application case ID"
					},
					{
						"name": "userId",
						"in": "body",
						"description": "Id of the user being removed",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserGuidPayload"
						}
					},
					{
						"name": "x-service-name",
						"in": "header",
						"type": "string",
						"description": "Service name header",
						"default": "swagger"
					},
					{
						"name": "x-api-key",
						"in": "header",
						"type": "string",
						"description": "API key header",
						"default": "123"
					}
				],
				"responses": {
					"200": {
						"description": "Project team member",
						"schema": {
							"$ref": "#/definitions/ProjectTeamMember"
						}
					},
					"404": {
						"description": "Error: Not Found",
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "Must be an existing application"
										}
									}
								}
							},
							"xml": {
								"name": "main"
							}
						}
					}
				}
			}
		}
	},
	"definitions": {
		"UpdateApplication": {
			"type": "object",
			"properties": {
				"title": {
					"type": "string",
					"example": ""
				},
				"description": {
					"type": "string",
					"example": ""
				},
				"subSectorName": {
					"type": "string",
					"example": ""
				},
				"caseEmail": {
					"type": "string",
					"example": ""
				},
				"stage": {
					"type": "string",
					"example": ""
				},
				"geographicalInformation": {
					"type": "object",
					"properties": {
						"mapZoomLevelName": {
							"type": "string",
							"example": ""
						},
						"locationDescription": {
							"type": "string",
							"example": ""
						},
						"regionNames": {
							"type": "array",
							"example": [""],
							"items": {
								"type": "string"
							}
						},
						"gridReference": {
							"type": "object",
							"properties": {
								"easting": {
									"type": "string",
									"example": "123456"
								},
								"northing": {
									"type": "string",
									"example": "098765"
								}
							}
						}
					}
				},
				"applicant": {
					"type": "object",
					"properties": {
						"id": {
							"type": "number",
							"example": 1
						},
						"organisationName": {
							"type": "string",
							"example": ""
						},
						"firstName": {
							"type": "string",
							"example": ""
						},
						"middleName": {
							"type": "string",
							"example": ""
						},
						"lastName": {
							"type": "string",
							"example": ""
						},
						"email": {
							"type": "string",
							"example": ""
						},
						"website": {
							"type": "string",
							"example": ""
						},
						"phoneNumber": {
							"type": "string",
							"example": ""
						},
						"address": {
							"type": "object",
							"properties": {
								"addressLine1": {
									"type": "string",
									"example": ""
								},
								"addressLine2": {
									"type": "string",
									"example": ""
								},
								"town": {
									"type": "string",
									"example": ""
								},
								"county": {
									"type": "string",
									"example": ""
								},
								"postcode": {
									"type": "string",
									"example": ""
								}
							}
						}
					}
				},
				"keyDates": {
					"type": "object",
					"properties": {
						"preApplication": {
							"type": "object",
							"properties": {
								"submissionAtPublished": {
									"type": "string",
									"example": "Q1 2023"
								},
								"submissionAtInternal": {
									"type": "number",
									"example": 123
								}
							}
						}
					}
				},
				"hasUnpublishedChanges": {
					"type": "boolean",
					"example": false
				}
			}
		},
		"CreateApplication": {
			"type": "object",
			"properties": {
				"title": {
					"type": "string",
					"example": ""
				},
				"description": {
					"type": "string",
					"example": ""
				},
				"subSectorName": {
					"type": "string",
					"example": ""
				},
				"caseEmail": {
					"type": "string",
					"example": ""
				},
				"geographicalInformation": {
					"type": "object",
					"properties": {
						"mapZoomLevelName": {
							"type": "string",
							"example": ""
						},
						"locationDescription": {
							"type": "string",
							"example": ""
						},
						"regionNames": {
							"type": "array",
							"example": [""],
							"items": {
								"type": "string"
							}
						},
						"gridReference": {
							"type": "object",
							"properties": {
								"easting": {
									"type": "string",
									"example": "123456"
								},
								"northing": {
									"type": "string",
									"example": "098765"
								}
							}
						}
					}
				},
				"applicant": {
					"type": "object",
					"properties": {
						"organisationName": {
							"type": "string",
							"example": ""
						},
						"firstName": {
							"type": "string",
							"example": ""
						},
						"middleName": {
							"type": "string",
							"example": ""
						},
						"lastName": {
							"type": "string",
							"example": ""
						},
						"email": {
							"type": "string",
							"example": ""
						},
						"address": {
							"type": "object",
							"properties": {
								"addressLine1": {
									"type": "string",
									"example": ""
								},
								"addressLine2": {
									"type": "string",
									"example": ""
								},
								"town": {
									"type": "string",
									"example": ""
								},
								"county": {
									"type": "string",
									"example": ""
								},
								"postcode": {
									"type": "string",
									"example": ""
								}
							}
						},
						"website": {
							"type": "string",
							"example": ""
						},
						"phoneNumber": {
							"type": "string",
							"example": ""
						}
					}
				},
				"keyDates": {
					"type": "object",
					"properties": {
						"preApplication": {
							"type": "object",
							"properties": {
								"submissionAtPublished": {
									"type": "string",
									"example": "Q1 2023"
								},
								"submissionAtInternal": {
									"type": "number",
									"example": 123
								}
							}
						}
					}
				}
			}
		},
		"Sectors": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"abbreviation": {
						"type": "string",
						"example": "BB"
					},
					"displayNameCy": {
						"type": "string",
						"example": "Sector Name Cy"
					},
					"displayNameEn": {
						"type": "string",
						"example": "Sector Name En"
					},
					"name": {
						"type": "string",
						"example": "sector"
					}
				}
			}
		},
		"RegionsForApplications": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number",
						"example": 1
					},
					"name": {
						"type": "string",
						"example": "Region Name"
					},
					"displayNameEn": {
						"type": "string",
						"example": "Region Name En"
					},
					"displayNameCy": {
						"type": "string",
						"example": "Region Name Cy"
					}
				}
			}
		},
		"CaseStages": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"example": "post_decision"
					},
					"displayNameEn": {
						"type": "string",
						"example": "Post-Decision"
					}
				}
			}
		},
		"MapZoomLevelForApplications": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number",
						"example": 1
					},
					"name": {
						"type": "string",
						"example": "Region Name"
					},
					"displayOrder": {
						"type": "number",
						"example": 100
					},
					"displayNameEn": {
						"type": "string",
						"example": "Region Name En"
					},
					"displayNameCy": {
						"type": "string",
						"example": "Region Name Cy"
					}
				}
			}
		},
		"DocumentDetails": {
			"type": "object",
			"properties": {
				"documentId": {
					"type": "string",
					"example": "123"
				},
				"version": {
					"type": "number",
					"example": 1
				},
				"sourceSystem": {
					"type": "string",
					"example": "ABC"
				},
				"documentGuid": {
					"type": "string",
					"example": "456"
				},
				"fileName": {
					"type": "string",
					"example": "document.pdf"
				},
				"datePublished": {
					"type": "number",
					"example": 1646822400
				},
				"privateBlobPath": {
					"type": "string",
					"example": "/documents/123.pdf"
				},
				"privateBlobContainer": {
					"type": "string",
					"example": "my-blob-storage"
				},
				"author": {
					"type": "string",
					"example": "John Smith"
				},
				"dateCreated": {
					"type": "number",
					"example": 1646822400
				},
				"publishedStatus": {
					"type": "string",
					"example": "published"
				},
				"redactedStatus": {
					"type": "string",
					"example": "not redacted"
				},
				"size": {
					"type": "number",
					"example": 1024
				},
				"mime": {
					"type": "string",
					"example": "application/pdf"
				},
				"description": {
					"type": "string",
					"example": "This is a sample document."
				},
				"representative": {
					"type": "string",
					"example": "Jane Doe"
				},
				"stage": {
					"type": "string",
					"example": "draft"
				},
				"filter1": {
					"type": "string",
					"example": "some filter value"
				},
				"filter2": {
					"type": "string",
					"example": "some filter value"
				},
				"documentType": {
					"type": "string",
					"example": "contract"
				},
				"caseRef": {
					"type": "string",
					"example": "ABC-123"
				},
				"examinationRefNo": {
					"type": "string",
					"example": "EXM-456"
				},
				"transcript": {
					"type": "string",
					"example": "TR010060-000110"
				}
			}
		},
		"PaginatedDocumentDetails": {
			"type": "object",
			"properties": {
				"page": {
					"type": "number",
					"example": 1
				},
				"pageDefaultSize": {
					"type": "number",
					"example": 50
				},
				"pageCount": {
					"type": "number",
					"example": 1
				},
				"itemCount": {
					"type": "number",
					"example": 1
				},
				"items": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"documentId": {
								"type": "string",
								"example": "123"
							},
							"version": {
								"type": "number",
								"example": 1
							},
							"sourceSystem": {
								"type": "string",
								"example": "ABC"
							},
							"documentGuid": {
								"type": "string",
								"example": "456"
							},
							"fileName": {
								"type": "string",
								"example": "document.pdf"
							},
							"originalFilename": {
								"type": "string",
								"example": "original_document.pdf"
							},
							"datePublished": {
								"type": "number",
								"example": 1646822400
							},
							"privateBlobPath": {
								"type": "string",
								"example": "/documents/123.pdf"
							},
							"privateBlobContainer": {
								"type": "string",
								"example": "my-blob-storage"
							},
							"author": {
								"type": "string",
								"example": "John Smith"
							},
							"dateCreated": {
								"type": "number",
								"example": 1646822400
							},
							"publishedStatus": {
								"type": "string",
								"example": "published"
							},
							"redactedStatus": {
								"type": "string",
								"example": "not_redacted"
							},
							"size": {
								"type": "number",
								"example": 1024
							},
							"mime": {
								"type": "string",
								"example": "application/pdf"
							},
							"status": {
								"type": "string",
								"example": "active"
							},
							"description": {
								"type": "string",
								"example": "This is a sample document."
							},
							"representative": {
								"type": "string",
								"example": "Jane Doe"
							},
							"stage": {
								"type": "string",
								"example": "draft"
							},
							"filter1": {
								"type": "string",
								"example": "some filter value"
							},
							"filter2": {
								"type": "string",
								"example": "some filter value"
							},
							"documentType": {
								"type": "string",
								"example": "contract"
							},
							"caseRef": {
								"type": "string",
								"example": "ABC-123"
							},
							"examinationRefNo": {
								"type": "string",
								"example": "EXM-456"
							},
							"transcript": {
								"type": "string",
								"example": "TR010060-000110"
							}
						}
					}
				}
			}
		},
		"ApplicationSummary": {
			"type": "object",
			"properties": {
				"id": {
					"type": "number",
					"description": "Application id",
					"example": 1
				},
				"title": {
					"type": "string",
					"description": "Application title",
					"example": "NSIP Application Title"
				},
				"reference": {
					"type": "string",
					"description": "Application unique reference",
					"example": "BC0110001"
				},
				"modifiedDate": {
					"type": "number",
					"description": "Date last modified, unix timestamp",
					"example": 1655298882
				},
				"subSector": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string",
							"description": "Internal id code",
							"example": "office_use"
						},
						"abbreviation": {
							"type": "string",
							"description": "4-char code",
							"example": "BC01"
						},
						"displayNameEn": {
							"type": "string",
							"description": "Subsector title in English",
							"example": "Office Use"
						},
						"displayNameCy": {
							"type": "string",
							"description": "Subsector title in Welsh",
							"example": "Office Use"
						}
					}
				},
				"sector": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string",
							"description": "Internal id code",
							"example": "business_and_commercial"
						},
						"abbreviation": {
							"type": "string",
							"description": "4-char code",
							"example": "BC"
						},
						"displayNameEn": {
							"type": "string",
							"description": "Sector title in English",
							"example": "Business and Commercial"
						},
						"displayNameCy": {
							"type": "string",
							"description": "Sector title in Welsh",
							"example": "Business and Commercial"
						}
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"Pre-application",
						"Acceptance",
						"Pre-examination",
						"Examination",
						"Recommendation",
						"Decision",
						"Post decision",
						"Withdrawn"
					],
					"description": "Application status",
					"example": "Acceptance"
				}
			}
		},
		"ApplicationSummaryMany": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/ApplicationSummary"
			}
		},
		"ApplicationSearchSummary": {
			"type": "object",
			"properties": {
				"id": {
					"type": "number",
					"description": "Application id",
					"example": 1
				},
				"title": {
					"type": "string",
					"description": "Application title",
					"example": "NSIP Application Title"
				},
				"reference": {
					"type": "string",
					"description": "Application unique reference",
					"example": "BC0110001"
				},
				"description": {
					"type": "string",
					"description": "Application description",
					"example": "A description of the application"
				},
				"status": {
					"type": "string",
					"enum": [
						"Pre-application",
						"Acceptance",
						"Pre-examination",
						"Examination",
						"Recommendation",
						"Decision",
						"Post decision",
						"Withdrawn"
					],
					"description": "Application status",
					"example": "Acceptance"
				}
			}
		},
		"ApplicationsSearchCriteriaRequestBody": {
			"type": "object",
			"required": ["query", "role"],
			"properties": {
				"query": {
					"type": "string",
					"description": "String to search for",
					"example": "BC"
				},
				"role": {
					"type": "string",
					"description": "User role",
					"example": "case-team"
				},
				"pageNumber": {
					"type": "number",
					"description": "Page number required",
					"example": 1
				},
				"pageSize": {
					"type": "number",
					"description": "Max items per page",
					"example": 1
				}
			}
		},
		"ApplicationsSearchResponse": {
			"type": "object",
			"properties": {
				"page": {
					"type": "number",
					"description": "Page number",
					"example": 1
				},
				"pageSize": {
					"type": "number",
					"description": "Max items per page",
					"example": 1
				},
				"pageCount": {
					"type": "number",
					"description": "Total number of pages",
					"example": 1
				},
				"itemCount": {
					"type": "number",
					"description": "Total items",
					"example": 1
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ApplicationSearchSummary"
					}
				}
			}
		},
		"ApplicationProjectUpdate": {
			"allOf": [
				{
					"$ref": "#/definitions/ApplicationProjectUpdateCreateRequest"
				},
				{
					"type": "object",
					"requiredProperties": ["id", "caseId", "dateCreated", "sentToSubscribers"],
					"properties": {
						"id": {
							"type": "integer",
							"minimum": 0
						},
						"caseId": {
							"type": "integer",
							"minimum": 0
						},
						"dateCreated": {
							"type": "string",
							"format": "date-time",
							"description": "The date this update was created",
							"example": "2022-12-21T12:42:40.885Z"
						},
						"sentToSubscribers": {
							"type": "boolean",
							"description": "Has this update been emailed to subscribers?"
						},
						"datePublished": {
							"type": "string",
							"format": "date-time",
							"description": "The date this update's status was set to published",
							"example": "2022-12-21T12:42:40.885Z"
						},
						"type": {
							"type": "string",
							"enum": ["general", "applicationSubmitted", "applicationDecided", "registrationOpen"],
							"description": "the type of update - which determines which subscribers will receive the notification emails"
						}
					}
				}
			]
		},
		"ApplicationProjectUpdateCreateRequest": {
			"type": "object",
			"required": ["emailSubscribers", "status", "htmlContent"],
			"properties": {
				"authorId": {
					"type": "integer",
					"description": "The back-office ID of the user who created this updated"
				},
				"emailSubscribers": {
					"type": "boolean",
					"description": "Will this update be emailed to subscribers?"
				},
				"status": {
					"type": "string",
					"enum": ["draft", "published", "unpublished", "archived"],
					"description": "The current status of this update"
				},
				"title": {
					"type": "string",
					"description": "The internal title of this update"
				},
				"htmlContent": {
					"type": "string",
					"description": "The HTML content of this update, it can only include `<p> <a> <strong> <ul> <li> <br>` tags",
					"example": "<strong>Important Update</strong> Something happened."
				},
				"htmlContentWelsh": {
					"type": "string",
					"description": "The HTML content of this update in Welsh, it can only include `<p> <a> <strong> <ul> <li> <br>` tags",
					"example": "<strong>Diweddariad Pwysig</strong> Digwyddodd rhywbeth."
				}
			}
		},
		"ApplicationProjectUpdateUpdateRequest": {
			"type": "object",
			"properties": {
				"emailSubscribers": {
					"type": "boolean",
					"description": "Will this update be emailed to subscribers?"
				},
				"status": {
					"type": "string",
					"enum": ["draft", "published", "unpublished", "archived"],
					"description": "The current status of this update"
				},
				"title": {
					"type": "string",
					"description": "The internal title of this update"
				},
				"htmlContent": {
					"type": "string",
					"description": "The HTML content of this update, it can only include `<p> <a> <strong> <ul> <li> <br>` tags",
					"example": "<strong>Important Update</strong> Something happened."
				},
				"htmlContentWelsh": {
					"type": "string",
					"description": "The HTML content of this update in Welsh, it can only include `<p> <a> <strong> <ul> <li> <br>` tags",
					"example": "<strong>Diweddariad Pwysig</strong> Digwyddodd rhywbeth."
				},
				"type": {
					"type": "string",
					"enum": ["general", "applicationSubmitted", "applicationDecided", "registrationOpen"],
					"description": "the type of update - which determines which subscribers will recieve the notification emails"
				},
				"sentToSubscribers": {
					"type": "boolean",
					"description": "Has this update been emailed to subscribers?"
				}
			}
		},
		"ApplicationProjectUpdateCreateBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"emailSubscribers": {
							"type": "string",
							"example": "emailSubscribers is required"
						},
						"status": {
							"type": "string",
							"example": "status is required"
						},
						"htmlContent": {
							"type": "string",
							"example": "htmlContent is required"
						},
						"title": {
							"type": "string",
							"example": "title must be a string"
						},
						"htmlContentWelsh": {
							"type": "string",
							"example": "title must be a string"
						},
						"type": {
							"type": "string",
							"example": "type must be a string"
						},
						"sentToSubscribers": {
							"type": "string",
							"example": "sentToSubscribers must be a boolean"
						}
					}
				}
			}
		},
		"ApplicationProjectUpdatesListBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string",
							"example": "status must be one of ..."
						},
						"sentToSubscribers": {
							"type": "string",
							"example": "sentToSubscribers must be a boolean"
						},
						"publishedBefore": {
							"type": "string",
							"example": "publishedBefore must be a valid date"
						},
						"page": {
							"type": "string",
							"example": "page must be a number"
						},
						"pageSize": {
							"type": "string",
							"example": "pageSize must be a number"
						}
					}
				}
			}
		},
		"ApplicationProjectUpdates": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"minimum": 0
				},
				"pageCount": {
					"type": "integer",
					"minimum": 0
				},
				"pageSize": {
					"type": "integer",
					"minimum": 0
				},
				"itemCount": {
					"type": "integer",
					"minimum": 0
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ApplicationProjectUpdate"
					}
				}
			}
		},
		"DocumentActivityLog": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Id",
					"example": 1
				},
				"documentGuid": {
					"type": "string",
					"description": "Username",
					"example": "ab12cd34-5678-90ef-ghij-klmnopqrstuv"
				},
				"version": {
					"type": "integer",
					"description": "Document version",
					"example": 2
				},
				"user": {
					"type": "string",
					"description": "Username",
					"example": "test-user@email.com"
				},
				"status": {
					"type": "string",
					"description": "",
					"example": "uploaded"
				},
				"createdAt": {
					"type": "string",
					"description": "Date created",
					"example": "2023-10-04T12:45:19.785Z"
				}
			}
		},
		"DocumentToSaveExtended": {
			"type": "object",
			"required": [
				"documentName",
				"documentSize",
				"documentType",
				"caseId",
				"folderId",
				"fileRowId",
				"username"
			],
			"properties": {
				"documentName": {
					"type": "string",
					"description": "Document file name",
					"example": "document.pdf"
				},
				"documentSize": {
					"type": "integer",
					"description": "Document size in bytes",
					"example": 1024
				},
				"documentType": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"caseId": {
					"type": "string",
					"description": "Case Id",
					"example": "1"
				},
				"folderId": {
					"type": "integer",
					"description": "Folder Id",
					"example": 123
				},
				"fileRowId": {
					"type": "string",
					"description": "",
					"example": "file_row_1585663020000_7945"
				},
				"username": {
					"type": "string",
					"description": "Username",
					"example": "John Keats"
				},
				"documentReference": {
					"type": "string",
					"description": "Document unique reference",
					"example": "BC011001-123456"
				},
				"fromFrontOffice": {
					"type": "boolean",
					"description": "Sent from Front Office?",
					"example": false
				}
			}
		},
		"DocumentToSave": {
			"type": "object",
			"required": [
				"documentName",
				"documentSize",
				"documentType",
				"caseId",
				"folderId",
				"fileRowId",
				"username"
			],
			"properties": {
				"documentName": {
					"type": "string",
					"description": "Document file name",
					"example": "document.pdf"
				},
				"documentSize": {
					"type": "integer",
					"description": "Document size in bytes",
					"example": 1024
				},
				"documentType": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"caseId": {
					"type": "string",
					"description": "Case Id",
					"example": "1"
				},
				"folderId": {
					"type": "integer",
					"description": "Folder Id",
					"example": 123
				},
				"fileRowId": {
					"type": "string",
					"description": "",
					"example": "file_row_1585663020000_7945"
				},
				"username": {
					"type": "string",
					"description": "Username",
					"example": "John Keats"
				}
			}
		},
		"DocumentsToSaveManyRequestBody": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/DocumentToSave"
			}
		},
		"DocumentsToUpdateRequestBody": {
			"type": "object",
			"properties": {
				"status": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status to set. Optional",
					"example": "not_checked"
				},
				"redacted": {
					"type": "boolean",
					"description": "Set redaction status to redacted. Optional",
					"example": true
				},
				"documents": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"guid": {
								"type": "string",
								"description": "Document guid",
								"example": "00000000-a173-47e2-b4b2-ce7064e0468a"
							}
						}
					}
				}
			}
		},
		"DocumentsToPublishRequestBody": {
			"type": "object",
			"properties": {
				"documents": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"guid": {
								"type": "string",
								"description": "Document guid",
								"example": "00000000-a173-47e2-b4b2-ce7064e0468a"
							}
						}
					}
				},
				"username": {
					"type": "string",
					"description": "Username",
					"example": "test-user@email.com"
				}
			}
		},
		"DocumentProperties": {
			"type": "object",
			"properties": {
				"documentGuid": {
					"type": "string",
					"description": "Document GUID",
					"example": "ab12cd34-5678-90ef-ghij-klmnopqrstuv"
				},
				"documentId": {
					"type": "integer",
					"description": "",
					"example": null
				},
				"documentRef": {
					"type": "string",
					"description": "Document Reference",
					"example": "BC011001-000001"
				},
				"folderId": {
					"type": "integer",
					"description": "Folder Id",
					"example": 2
				},
				"caseRef": {
					"type": "string",
					"description": "Case Reference",
					"example": "BC011001"
				},
				"sourceSystem": {
					"type": "string",
					"description": "Source system of the document",
					"example": "back-office"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Back Office blob storage container",
					"example": "Blob-Storage-Container"
				},
				"privateBlobPath": {
					"type": "string",
					"description": "Back Office blob storage path",
					"example": "https://intranet.planninginspectorate.gov.uk/wp-content/uploads/2023/10/Lightbulb-L-and-D.gif"
				},
				"author": {
					"type": "string",
					"description": "",
					"example": null
				},
				"fileName": {
					"type": "string",
					"description": "File Title",
					"example": "Small Doc 1"
				},
				"originalFilename": {
					"type": "string",
					"description": "The original filename",
					"example": "Small1.pdf"
				},
				"dateCreated": {
					"type": "integer",
					"description": "Date Created Unix timestamp",
					"example": 1696418643
				},
				"size": {
					"type": "integer",
					"description": "File size in bytes",
					"example": 1024
				},
				"mime": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "ready_to_publish"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Redacted status",
					"example": null
				},
				"datePublished": {
					"type": "integer",
					"description": "Date published Unix timestamp",
					"example": 1696418643
				},
				"description": {
					"type": "string",
					"description": "",
					"example": null
				},
				"version": {
					"type": "integer",
					"description": "Document version",
					"example": 2
				},
				"representative": {
					"type": "string",
					"description": "",
					"example": null
				},
				"stage": {
					"type": "integer",
					"description": "",
					"example": 3
				},
				"documentType": {
					"type": "string",
					"description": "",
					"example": null
				},
				"filter1": {
					"type": "string",
					"description": "",
					"example": "some filter"
				},
				"filter2": {
					"type": "string",
					"description": "",
					"example": "some filter"
				},
				"examinationRefNo": {
					"type": "string",
					"description": "Examination Timetable reference number",
					"example": null
				},
				"fromFrontOffice": {
					"type": "boolean",
					"description": "Document from front office",
					"example": false
				}
			}
		},
		"DocumentPropertiesWithVersionWithCase": {
			"type": "object",
			"properties": {
				"documentGuid": {
					"type": "string",
					"description": "Document guid",
					"example": "ab12cd34-5678-90ef-ghij-klmnopqrstuv"
				},
				"version": {
					"type": "integer",
					"description": "Document version",
					"example": 1
				},
				"lastModified": {
					"type": "integer",
					"description": "Last modified Unix timestamp",
					"example": 1696418643
				},
				"documentType": {
					"type": "string",
					"description": "",
					"example": null
				},
				"published": {
					"type": "boolean",
					"description": "",
					"example": false
				},
				"sourceSystem": {
					"type": "string",
					"description": "Source system of the document",
					"example": "back-office"
				},
				"origin": {
					"type": "string",
					"description": "",
					"example": null
				},
				"originalFilename": {
					"type": "string",
					"description": "The original filename",
					"example": "Small1.pdf"
				},
				"fileName": {
					"type": "string",
					"description": "File Title",
					"example": "Small Doc 1"
				},
				"representative": {
					"type": "string",
					"description": "",
					"example": null
				},
				"description": {
					"type": "string",
					"description": "",
					"example": null
				},
				"owner": {
					"type": "string",
					"description": "",
					"example": null
				},
				"author": {
					"type": "string",
					"description": "",
					"example": null
				},
				"securityClassification": {
					"type": "string",
					"description": "",
					"example": null
				},
				"mime": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"horizonDataID": {
					"type": "string",
					"description": "",
					"example": null
				},
				"fileMD5": {
					"type": "string",
					"description": "",
					"example": null
				},
				"virusCheckStatus": {
					"type": "string",
					"description": "",
					"example": null
				},
				"size": {
					"type": "integer",
					"description": "File size in bytes",
					"example": 1024
				},
				"stage": {
					"type": "integer",
					"description": "",
					"example": 3
				},
				"filter1": {
					"type": "string",
					"description": "",
					"example": "some filter"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Back Office blob storage container",
					"example": "document-service-uploads"
				},
				"privateBlobPath": {
					"type": "string",
					"description": "Back Office blob storage path",
					"example": "https://intranet.planninginspectorate.gov.uk/wp-content/uploads/2023/10/Lightbulb-L-and-D.gif"
				},
				"publishedBlobContainer": {
					"type": "string",
					"description": "Published blob storage container",
					"example": "published-documents"
				},
				"publishedBlobPath": {
					"type": "string",
					"description": "Published blob storage path",
					"example": "published/bc0110001-filename.pdf"
				},
				"dateCreated": {
					"type": "string",
					"description": "Date document was created",
					"example": "2022-12-21T12:42:40.885Z"
				},
				"datePublished": {
					"type": "string",
					"description": "Date document was published",
					"example": "2022-12-21T12:42:40.885Z"
				},
				"isDeleted": {
					"type": "boolean",
					"description": "Is the document marked as deleted",
					"example": false
				},
				"examinationRefNo": {
					"type": "string",
					"description": "Examination Timetable reference number",
					"example": null
				},
				"filter2": {
					"type": "string",
					"description": "",
					"example": "some filter"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "ready_to_publish"
				},
				"publishedStatusPrev": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "The previous status",
					"example": "not_checked"
				},
				"Document": {
					"type": "object",
					"properties": {
						"guid": {
							"type": "string",
							"description": "Document guid",
							"example": "ab12cd34-5678-90ef-ghij-klmnopqrstuv"
						},
						"documentRef": {
							"type": "string",
							"description": "Document Reference",
							"example": "BC011001-000001"
						},
						"folderId": {
							"type": "integer",
							"description": "Folder Id",
							"example": 2
						},
						"createdAt": {
							"type": "string",
							"description": "Date document was created",
							"example": "2022-12-21T12:42:40.885Z"
						},
						"isDeleted": {
							"type": "boolean",
							"description": "Is the document marked as deleted",
							"example": false
						},
						"latestVersionId": {
							"type": "integer",
							"description": "Document latest version id",
							"example": 2
						},
						"caseId": {
							"type": "integer",
							"description": "Application case id",
							"example": 1
						},
						"fromFrontOffice": {
							"type": "boolean",
							"description": "Document from front office",
							"example": false
						}
					}
				},
				"case": {
					"type": "object",
					"properties": {
						"id": {
							"type": "number",
							"description": "Application id",
							"example": 1
						},
						"reference": {
							"type": "string",
							"description": "Application unique reference",
							"example": "BC0110001"
						},
						"modifiedAt": {
							"type": "string",
							"format": "date-time",
							"description": "The date this case was last modified",
							"example": "2022-12-21T12:42:40.885Z"
						},
						"createdAt": {
							"type": "string",
							"format": "date-time",
							"description": "The date this case was created",
							"example": "2022-12-21T12:42:40.885Z"
						},
						"description": {
							"type": "string",
							"description": "Application description",
							"example": "A description of the application"
						},
						"title": {
							"type": "string",
							"description": "Application title",
							"example": "NSIP Application Title"
						},
						"hasUnpublishedChanges": {
							"type": "boolean",
							"description": "Does case have unpublished changes",
							"example": true
						},
						"applicantId": {
							"type": "number",
							"description": "Applicant Id",
							"example": "1000000"
						}
					}
				}
			}
		},
		"DocumentPropertiesWithAuditHistory": {
			"type": "object",
			"properties": {
				"documentGuid": {
					"type": "string",
					"description": "Username",
					"example": "ab12cd34-5678-90ef-ghij-klmnopqrstuv"
				},
				"version": {
					"type": "integer",
					"description": "Document version",
					"example": 2
				},
				"lastModified": {
					"type": "integer",
					"description": "Last modified Unix timestamp",
					"example": 1696418643
				},
				"documentType": {
					"type": "string",
					"description": "",
					"example": null
				},
				"published": {
					"type": "boolean",
					"description": "",
					"example": false
				},
				"sourceSystem": {
					"type": "string",
					"description": "Source system of the document",
					"example": "back-office"
				},
				"origin": {
					"type": "string",
					"description": "",
					"example": null
				},
				"originalFilename": {
					"type": "string",
					"description": "The original filename",
					"example": "Small1.pdf"
				},
				"fileName": {
					"type": "string",
					"description": "File Title",
					"example": "Small Doc 1"
				},
				"representative": {
					"type": "string",
					"description": "",
					"example": null
				},
				"description": {
					"type": "string",
					"description": "",
					"example": null
				},
				"owner": {
					"type": "string",
					"description": "",
					"example": null
				},
				"author": {
					"type": "string",
					"description": "",
					"example": null
				},
				"securityClassification": {
					"type": "string",
					"description": "",
					"example": null
				},
				"mime": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"horizonDataID": {
					"type": "string",
					"description": "",
					"example": null
				},
				"fileMD5": {
					"type": "string",
					"description": "",
					"example": null
				},
				"virusCheckStatus": {
					"type": "string",
					"description": "",
					"example": null
				},
				"size": {
					"type": "integer",
					"description": "File size in bytes",
					"example": 1024
				},
				"stage": {
					"type": "integer",
					"description": "",
					"example": 3
				},
				"filter1": {
					"type": "string",
					"description": "",
					"example": "some filter"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Back Office blob storage container",
					"example": "Blob-Storage-Container"
				},
				"privateBlobPath": {
					"type": "string",
					"description": "Back Office blob storage path",
					"example": "https://intranet.planninginspectorate.gov.uk/wp-content/uploads/2023/10/Lightbulb-L-and-D.gif"
				},
				"publishedBlobContainer": {
					"type": "string",
					"description": "Published blob storage container",
					"example": "published-documents"
				},
				"publishedBlobPath": {
					"type": "string",
					"description": "Published blob storage path",
					"example": "published/bc0110001-filename.pdf"
				},
				"dateCreated": {
					"type": "integer",
					"description": "Date Created Unix timestamp",
					"example": 1696418643
				},
				"datePublished": {
					"type": "integer",
					"description": "Date published Unix timestamp",
					"example": 1696418643
				},
				"isDeleted": {
					"type": "boolean",
					"description": "Is the document marked as deleted",
					"example": false
				},
				"examinationRefNo": {
					"type": "string",
					"description": "Examination Timetable reference number",
					"example": null
				},
				"filter2": {
					"type": "string",
					"description": "",
					"example": "some filter"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "ready_to_publish"
				},
				"publishedStatusPrev": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "The previous status",
					"example": "not_checked"
				},
				"DocumentActivityLog": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentActivityLog"
					}
				},
				"history": {
					"type": "object",
					"properties": {
						"uploaded": {
							"type": "object",
							"properties": {
								"date": {
									"type": "integer",
									"description": "UTC timestamp",
									"example": 1696418643
								},
								"name": {
									"type": "string",
									"description": "User",
									"example": "test-user@email.com"
								}
							}
						}
					}
				}
			}
		},
		"DocumentPropertiesWithAllVersionWithAuditHistory": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/DocumentPropertiesWithAuditHistory"
			}
		},
		"DocumentBlobStoragePayload": {
			"type": "object",
			"required": [
				"caseType",
				"caseReference",
				"documentName",
				"documentReference",
				"GUID",
				"version"
			],
			"properties": {
				"caseType": {
					"type": "string",
					"enum": ["appeal", "application"],
					"description": "URL to the File",
					"example": "application"
				},
				"caseReference": {
					"type": "string",
					"description": "Case Reference",
					"example": "1"
				},
				"documentName": {
					"type": "string",
					"description": "Document name",
					"example": "document.pdf"
				},
				"documentReference": {
					"type": "string",
					"nullable": true,
					"description": "",
					"example": ""
				},
				"GUID": {
					"type": "string",
					"description": "Document guid",
					"example": "00000000-a173-47e2-b4b2-ce7064e0468a"
				},
				"version": {
					"type": "integer",
					"description": "Document version",
					"example": 1
				}
			}
		},
		"DocumentAndBlobStorageDetail": {
			"type": "object",
			"properties": {
				"blobStoreUrl": {
					"type": "string",
					"description": "URL to the File",
					"example": "/some/path/document.pdf"
				},
				"caseType": {
					"type": "string",
					"enum": ["appeal", "application"],
					"description": "URL to the File",
					"example": "application"
				},
				"caseReference": {
					"type": "string",
					"description": "Case Reference",
					"example": "1"
				},
				"documentName": {
					"type": "string",
					"description": "Document name",
					"example": "document.pdf"
				},
				"GUID": {
					"type": "string",
					"description": "Document guid",
					"example": "00000000-a173-47e2-b4b2-ce7064e0468a"
				}
			}
		},
		"DocumentAndBlobInfoResponse": {
			"type": "object",
			"properties": {
				"blobStorageHost": {
					"type": "string",
					"description": "Blob Storage host name",
					"example": "blob-storage-host"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Private Blob Storage container name",
					"example": "blob-storage-container"
				},
				"document": {
					"$ref": "#/definitions/DocumentAndBlobStorageDetail"
				}
			}
		},
		"DocumentAndBlobInfoManyResponse": {
			"type": "object",
			"properties": {
				"blobStorageHost": {
					"type": "string",
					"description": "Blob Storage host name",
					"example": "blob-storage-host"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Private Blob Storage container name",
					"example": "blob-storage-container"
				},
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentAndBlobStorageDetail"
					}
				}
			}
		},
		"DocumentsUploadPartialFailed": {
			"type": "object",
			"properties": {
				"blobStorageHost": {
					"type": "string",
					"description": "Blob Storage host name",
					"example": "blob-storage-host"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Private Blob Storage container name",
					"example": "blob-storage-container"
				},
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentAndBlobStorageDetail"
					}
				},
				"failedDocuments": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "Failed document name",
						"example": "example.pdf"
					}
				},
				"duplicates": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "Failed document name",
						"example": "example2.pdf"
					}
				}
			}
		},
		"DocumentsUploadFailed": {
			"type": "object",
			"properties": {
				"failedDocuments": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "Failed document name",
						"example": "example.pdf"
					}
				},
				"duplicates": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "Failed document name",
						"example": "example2.pdf"
					}
				}
			}
		},
		"DocumentsPublished": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"guid": {
						"type": "string",
						"description": "Document guid",
						"example": "00000000-a173-47e2-b4b2-ce7064e0468a"
					},
					"publishedStatus": {
						"type": "string",
						"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
						"description": "Published status to set. Optional",
						"example": "not_checked"
					}
				}
			}
		},
		"DocumentVersionUpsertRequestBody": {
			"type": "object",
			"properties": {
				"version": {
					"type": "integer",
					"description": "Document version",
					"example": 2
				},
				"sourceSystem": {
					"type": "string",
					"description": "Source system of the document",
					"example": "back-office"
				},
				"documentGuid": {
					"type": "string",
					"description": "Username",
					"example": "ab12cd34-5678-90ef-ghij-klmnopqrstuv"
				},
				"fileName": {
					"type": "string",
					"description": "File Title",
					"example": "Small Doc 1"
				},
				"datePublished": {
					"type": "string",
					"description": "Date published UTC",
					"example": "2022-12-21T12:42:40.885Z"
				},
				"privateBlobContainer": {
					"type": "string",
					"description": "Back Office blob storage container",
					"example": "Blob-Storage-Container"
				},
				"privateBlobPath": {
					"type": "string",
					"description": "Back Office blob storage path",
					"example": "/documents/123.pdf"
				},
				"author": {
					"type": "string",
					"description": "",
					"example": "John Keats"
				},
				"dateCreated": {
					"type": "string",
					"description": "Date created UTC",
					"example": "2022-12-21T12:42:40.885Z"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "ready_to_publish"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Redacted status",
					"example": null
				},
				"size": {
					"type": "integer",
					"description": "File size in bytes",
					"example": 1024
				},
				"mime": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"description": {
					"type": "string",
					"description": "This is a sample document",
					"example": null
				},
				"representative": {
					"type": "string",
					"description": "",
					"example": "Jane Doe"
				},
				"filter1": {
					"type": "string",
					"description": "",
					"example": "some filter value"
				},
				"filter2": {
					"type": "string",
					"description": "",
					"example": "some filter value"
				},
				"documentType": {
					"type": "string",
					"description": "",
					"example": "contract"
				},
				"caseRef": {
					"type": "string",
					"description": "Case Reference",
					"example": "BC011001"
				},
				"examinationRefNo": {
					"type": "string",
					"description": "Examination Timetable reference number",
					"example": "EXM-456"
				},
				"transcript": {
					"type": "string",
					"description": "Transcript document reference number",
					"example": "TR010060-000110"
				}
			}
		},
		"DocumentsToUnpublishRequestBody": {
			"type": "object",
			"properties": {
				"documents": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"guid": {
								"type": "string",
								"example": "0084b156-006b-48b1-a47f-e7176414db29"
							}
						}
					}
				}
			}
		},
		"DocumentsUnpublishResponseBody": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"guid": {
								"type": "string"
							},
							"msg": {
								"type": "msg"
							}
						}
					}
				},
				"successful": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"DocumentMarkAsPublishedRequestBody": {
			"type": "object",
			"properties": {
				"publishedBlobPath": {
					"type": "string",
					"description": "The published blob path",
					"example": "published/en010120-filename.pdf"
				},
				"publishedBlobContainer": {
					"type": "string",
					"description": "The published blob container",
					"example": "published-documents"
				},
				"publishedDate": {
					"type": "string",
					"description": "The published date",
					"example": "2023-11-14T00:00:00Z"
				}
			}
		},
		"DocumentMarkAsPublishedBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"publishedBlobPath": {
							"type": "string",
							"example": "Must provide a published blob path"
						},
						"publishedBlobContainer": {
							"type": "string",
							"example": "Must provide a published blob container"
						},
						"publishedDate": {
							"type": "string",
							"example": "Must provide a published date"
						}
					}
				}
			}
		},
		"DocumentHTMLResponse": {
			"type": "object",
			"properties": {
				"html": {
					"description": "HTML string matching Front Office YouTube template",
					"type": "string"
				}
			}
		},
		"DocumentBadHTMLResponse": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"message": {
							"type": "string"
						}
					}
				}
			}
		},
		"ExaminationTimetableType": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable type id",
					"example": 1
				},
				"templateType": {
					"type": "string",
					"description": "Examination timetable type template type",
					"example": "accompanied-site-inspection"
				},
				"name": {
					"type": "string",
					"description": "Examination timetable type name",
					"example": "Accompanied Site Inspection"
				},
				"displayNameEn": {
					"type": "string",
					"description": "Examination timetable type display name",
					"example": "Accompanied site inspection"
				},
				"displayNameCy": {
					"type": "string",
					"description": "Examination timetable type display name in Welsh",
					"example": "Accompanied site inspection Cy"
				}
			}
		},
		"ExaminationTimetableTypes": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/ExaminationTimetableType"
			}
		},
		"ExaminationTimetable": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable id",
					"example": 1
				},
				"caseId": {
					"type": "integer",
					"description": "Case Id",
					"example": 1
				},
				"published": {
					"type": "boolean",
					"description": "Is the examination timetable published?",
					"example": true
				},
				"publishedAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date Examination timetable was published",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"createdAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date created",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"updateAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date last updated",
					"example": "2023-02-01T00:00:00.000Z"
				}
			}
		},
		"ExaminationTimetableWithItems": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable id",
					"example": 1
				},
				"caseId": {
					"type": "integer",
					"description": "Case Id",
					"example": 1
				},
				"published": {
					"type": "boolean",
					"description": "Is the examination timetable published?",
					"example": true
				},
				"publishedAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date Examination timetable was published",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"createdAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date created",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"updateAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date last updated",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExaminationTimetableItem"
					}
				}
			}
		},
		"ExaminationTimetableItem": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable item id",
					"example": 1
				},
				"examinationTimetableId": {
					"type": "integer",
					"description": "Examination timetable parent id",
					"example": 1
				},
				"examinationTypeId": {
					"type": "integer",
					"description": "Examination timetable type id",
					"example": 1
				},
				"name": {
					"type": "string",
					"description": "Examination timetable item name",
					"example": "Deadline 1"
				},
				"description": {
					"type": "string",
					"description": "Examination timetable item name including line items",
					"example": "{\"preText\":\"Deadline 1 line items\\r\\n\",\"bulletPoints\":[\" Line item 1\\r\\n\",\" Line item 2\"]}"
				},
				"date": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item date / end date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startDate": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item start date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startTime": {
					"type": "string",
					"description": "Examination timetable start time",
					"example": "10:20"
				},
				"endTime": {
					"type": "string",
					"description": "Examination timetable end time",
					"example": "23:59"
				},
				"folderId": {
					"type": "integer",
					"description": "Examination timetable item corresponding folder id",
					"example": 123
				},
				"createdAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date created",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"ExaminationTimetableType": {
					"$ref": "#/definitions/ExaminationTimetableType"
				},
				"submissions": {
					"type": "boolean",
					"description": "Matching folder contains submissions",
					"example": true
				}
			}
		},
		"ExaminationTimetableItemWithExamTimetable": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable item id",
					"example": 1
				},
				"examinationTimetableId": {
					"type": "integer",
					"description": "Examination timetable parent id",
					"example": 1
				},
				"examinationTypeId": {
					"type": "integer",
					"description": "Examination timetable type id",
					"example": 1
				},
				"name": {
					"type": "string",
					"description": "Examination timetable item name",
					"example": "Deadline 1"
				},
				"description": {
					"type": "string",
					"description": "Examination timetable item name including line items",
					"example": "{\"preText\":\"Deadline 1 line items\\r\\n\",\"bulletPoints\":[\" Line item 1\\r\\n\",\" Line item 2\"]}"
				},
				"date": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item date / end date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startDate": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item start date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startTime": {
					"type": "string",
					"description": "Examination timetable start time",
					"example": "10:20"
				},
				"endTime": {
					"type": "string",
					"description": "Examination timetable end time",
					"example": "23:59"
				},
				"folderId": {
					"type": "integer",
					"description": "Examination timetable item corresponding folder id",
					"example": 123
				},
				"createdAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date created",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"ExaminationTimetableType": {
					"$ref": "#/definitions/ExaminationTimetableType"
				},
				"ExaminationTimetable": {
					"$ref": "#/definitions/ExaminationTimetable"
				},
				"submissions": {
					"type": "boolean",
					"description": "Matching folder contains submissions",
					"example": true
				}
			}
		},
		"ExaminationTimetableItemCreateRequestBody": {
			"type": "object",
			"properties": {
				"caseId": {
					"type": "integer",
					"description": "Case id",
					"example": 1
				},
				"examinationTypeId": {
					"type": "integer",
					"description": "Examination timetable type id",
					"example": 1
				},
				"name": {
					"type": "string",
					"description": "Examination timetable item name",
					"example": "Deadline 1"
				},
				"description": {
					"type": "string",
					"description": "Examination timetable item name including line items",
					"example": "{\"preText\":\"Deadline 1 line items\\r\\n\",\"bulletPoints\":[\" Line item 1\\r\\n\",\" Line item 2\"]}"
				},
				"date": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item date / end date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startDate": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item start date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startTime": {
					"type": "string",
					"description": "Examination timetable start time",
					"example": "10:20"
				},
				"endTime": {
					"type": "string",
					"description": "Examination timetable end time",
					"example": "23:59"
				}
			}
		},
		"ExaminationTimetableItemUpdateRequestBody": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable item id",
					"example": 1
				},
				"caseId": {
					"type": "integer",
					"description": "Case id",
					"example": 1
				},
				"examinationTypeId": {
					"type": "integer",
					"description": "Examination timetable type id",
					"example": 1
				},
				"name": {
					"type": "string",
					"description": "Examination timetable item name",
					"example": "Deadline 1"
				},
				"description": {
					"type": "string",
					"description": "Examination timetable item name including line items",
					"example": "{\"preText\":\"Deadline 1 line items\\r\\n\",\"bulletPoints\":[\" Line item 1\\r\\n\",\" Line item 2\"]}"
				},
				"date": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item date / end date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startDate": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item start date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startTime": {
					"type": "string",
					"description": "Examination timetable start time",
					"example": "10:20"
				},
				"endTime": {
					"type": "string",
					"description": "Examination timetable end time",
					"example": "23:59"
				}
			}
		},
		"ExaminationTimetableItemSaveResponse": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "Examination timetable item id",
					"example": 1
				},
				"examinationTimetableId": {
					"type": "integer",
					"description": "Examination timetable parent id",
					"example": 1
				},
				"examinationTypeId": {
					"type": "integer",
					"description": "Examination timetable type id",
					"example": 1
				},
				"name": {
					"type": "string",
					"description": "Examination timetable item name",
					"example": "Deadline 1"
				},
				"description": {
					"type": "string",
					"description": "Examination timetable item name including line items",
					"example": "{\"preText\":\"Deadline 1 line items\\r\\n\",\"bulletPoints\":[\" Line item 1\\r\\n\",\" Line item 2\"]}"
				},
				"date": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item date / end date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startDate": {
					"type": "string",
					"string": "date-time",
					"description": "Examination timetable item start date",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"startTime": {
					"type": "string",
					"description": "Examination timetable start time",
					"example": "10:20"
				},
				"endTime": {
					"type": "string",
					"description": "Examination timetable end time",
					"example": "23:59"
				},
				"folderId": {
					"type": "integer",
					"description": "Examination timetable item corresponding folder id",
					"example": 123
				},
				"createdAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date created",
					"example": "2023-02-01T00:00:00.000Z"
				}
			}
		},
		"ExaminationTimetableItemSaveBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"caseId": {
							"type": "string",
							"example": "Must be valid case id"
						},
						"examinationTypeId": {
							"type": "string",
							"example": "Must be valid examination type"
						}
					}
				}
			}
		},
		"PaginationRequestBody": {
			"type": "object",
			"properties": {
				"pageNumber": {
					"type": "integer",
					"description": "Page number requested",
					"example": 1
				},
				"pageSize": {
					"type": "integer",
					"description": "Max number of items per page",
					"example": 1
				}
			}
		},
		"S51AdviceCreateRequestBody": {
			"type": "object",
			"properties": {
				"caseId": {
					"type": "integer",
					"description": "The application id",
					"example": 1
				},
				"title": {
					"type": "string",
					"description": "Advice title",
					"example": "Advice regarding right to roam"
				},
				"enquirer": {
					"type": "string",
					"description": "Name of enquiring company / organisation ",
					"example": "New Power Plc"
				},
				"firstName": {
					"type": "string",
					"description": "First name of enquirer",
					"example": "John"
				},
				"lastName": {
					"type": "string",
					"description": "Last name of enquirer",
					"example": "Keats"
				},
				"enquiryMethod": {
					"type": "string",
					"enum": ["phone", "email", "meeting", "post"],
					"description": "Enquiry method",
					"example": "email"
				},
				"enquiryDate": {
					"type": "string",
					"description": "Date of enquiry yyyy-mm-dd",
					"example": "2023-03-01"
				},
				"enquiryDetails": {
					"type": "string",
					"description": "Details of the enquiry",
					"example": "details of the advice sought"
				},
				"adviser": {
					"type": "string",
					"description": "Name of who gave the advice",
					"example": "John Caseworker-Smith"
				},
				"adviceDate": {
					"type": "string",
					"description": "Date advice given yyyy-mm-dd",
					"example": "2023-03-01"
				},
				"adviceDetails": {
					"type": "string",
					"description": "Details of the advive given",
					"example": "details of the advice provided"
				}
			}
		},
		"S51AdviceDocumentDetails": {
			"type": "object",
			"properties": {
				"documentName": {
					"type": "string",
					"description": "Document name",
					"example": "Small9"
				},
				"documentType": {
					"type": "string",
					"description": "Document mime type",
					"example": "application/pdf"
				},
				"documentSize": {
					"type": "number",
					"description": "Size of the document in bytes",
					"example": 7945
				},
				"dateAdded": {
					"type": "number",
					"description": "Date document was added in Unix timestamp format",
					"example": 1694179427
				},
				"status": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "not_checked"
				},
				"documentGuid": {
					"type": "string",
					"description": "GUID of the document in the Document table",
					"example": "742f3ba1-c80a-4f76-81c2-5a4627d6ac00"
				},
				"version": {
					"type": "number",
					"description": "Document version number",
					"example": 1
				}
			}
		},
		"S51AdviceDetails": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "The S51 Advice record id",
					"example": 1
				},
				"referenceNumber": {
					"type": "string",
					"description": "Advice reference 5 digits number",
					"example": "00001"
				},
				"referenceCode": {
					"type": "string",
					"description": "Advice reference number containing Case ref number",
					"example": "EN010001-Advice-00001"
				},
				"title": {
					"type": "string",
					"description": "Advice title",
					"example": "Advice regarding right to roam"
				},
				"enquirer": {
					"type": "string",
					"description": "Name of enquiring company / organisation",
					"example": "New Power Plc"
				},
				"firstName": {
					"type": "string",
					"description": "First name of enquirer",
					"example": "John"
				},
				"lastName": {
					"type": "string",
					"description": "Last name of enquirer",
					"example": "Keats"
				},
				"enquiryMethod": {
					"type": "string",
					"enum": ["phone", "email", "meeting", "post"],
					"description": "Enquiry method",
					"example": "email"
				},
				"enquiryDate": {
					"type": "number",
					"description": "Date of enquiry",
					"example": 1646822400
				},
				"enquiryDetails": {
					"type": "string",
					"description": "Details of the enquiry",
					"example": "details of the advice sought"
				},
				"adviser": {
					"type": "string",
					"description": "Name of who gave the advice",
					"example": "John Caseworker-Smith"
				},
				"adviceDate": {
					"type": "number",
					"description": "Date advice given",
					"example": 1646822400
				},
				"adviceDetails": {
					"type": "string",
					"description": "Details of the advive given",
					"example": "details of the advice provided"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Redacted status",
					"example": "not_redacted"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "published"
				},
				"dateCreated": {
					"type": "number",
					"description": "Date advice record was created",
					"example": 1646822400
				},
				"dateUpdated": {
					"type": "number",
					"description": "Date advice record was last updated",
					"example": 1646822400
				}
			}
		},
		"S51AdviceDetailsWithCaseId": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "The S51 Advice record id",
					"example": 1
				},
				"caseId": {
					"type": "integer",
					"description": "The application id",
					"example": 1
				},
				"title": {
					"type": "string",
					"description": "Advice title",
					"example": "Advice regarding right to roam"
				},
				"firstName": {
					"type": "string",
					"description": "First name of enquirer",
					"example": "John"
				},
				"lastName": {
					"type": "string",
					"description": "Last name of enquirer",
					"example": "Keats"
				},
				"enquirer": {
					"type": "string",
					"description": "Name of enquiring company / organisation",
					"example": "New Power Plc"
				},
				"enquiryMethod": {
					"type": "string",
					"enum": ["phone", "email", "meeting", "post"],
					"description": "Enquiry method",
					"example": "email"
				},
				"enquiryDate": {
					"type": "string",
					"string": "date-time",
					"description": "Date of enquiry",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"enquiryDetails": {
					"type": "string",
					"description": "Details of the enquiry",
					"example": "details of the advice sought"
				},
				"adviser": {
					"type": "string",
					"description": "Name of who gave the advice",
					"example": "John Caseworker-Smith"
				},
				"adviceDate": {
					"type": "string",
					"string": "date-time",
					"description": "Date advice given",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"adviceDetails": {
					"type": "string",
					"description": "Details of the advive given",
					"example": "details of the advice provided"
				},
				"referenceNumber": {
					"type": "integer",
					"description": "Advice reference number",
					"example": "1"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Redacted status",
					"example": "not_redacted"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "published"
				},
				"isDeleted": {
					"type": "boolean",
					"description": "True if the advice is marked as deleted",
					"example": "true"
				},
				"createdAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date advice record was created",
					"example": "2023-02-01T00:00:00.000Z"
				},
				"updatedAt": {
					"type": "string",
					"string": "date-time",
					"description": "Date advice record was last updated",
					"example": "2023-02-01T00:00:00.000Z"
				}
			}
		},
		"S51AdviceDetailsWithDocumentDetails": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"description": "The S51 Advice record id",
					"example": 1
				},
				"referenceNumber": {
					"type": "string",
					"description": "Advice reference 5 digits number",
					"example": "00001"
				},
				"referenceCode": {
					"type": "string",
					"description": "Advice reference number containing Case ref number",
					"example": "EN010001-Advice-00001"
				},
				"title": {
					"type": "string",
					"description": "Advice title",
					"example": "Advice regarding right to roam"
				},
				"enquirer": {
					"type": "string",
					"description": "Name of enquiring company / organisation",
					"example": "New Power Plc"
				},
				"firstName": {
					"type": "string",
					"description": "First name of enquirer",
					"example": "John"
				},
				"lastName": {
					"type": "string",
					"description": "Last name of enquirer",
					"example": "Keats"
				},
				"enquiryMethod": {
					"type": "string",
					"enum": ["phone", "email", "meeting", "post"],
					"description": "Enquiry method",
					"example": "email"
				},
				"enquiryDate": {
					"type": "number",
					"description": "Date of enquiry in Unix timestamp format",
					"example": 1646822400
				},
				"enquiryDetails": {
					"type": "string",
					"description": "Details of the enquiry",
					"example": "details of the advice sought"
				},
				"adviser": {
					"type": "string",
					"description": "Name of who gave the advice",
					"example": "John Caseworker-Smith"
				},
				"adviceDate": {
					"type": "number",
					"description": "Date advice given in Unix timestamp format",
					"example": 1646822400
				},
				"adviceDetails": {
					"type": "string",
					"description": "Details of the advive given",
					"example": "details of the advice provided"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "published"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Redacted status",
					"example": "not_redacted"
				},
				"dateCreated": {
					"type": "number",
					"description": "Date advice record was created in Unix timestamp format",
					"example": 1646822400
				},
				"dateUpdated": {
					"type": "number",
					"description": "Date advice record was last updated in Unix timestamp format",
					"example": 1646822400
				},
				"attachments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/S51AdviceDocumentDetails"
					}
				},
				"datePublished": {
					"type": "number",
					"description": "Date advice record was published in Unix timestamp format",
					"example": 1646822400
				},
				"totalAttachments": {
					"type": "number",
					"description": "Total S51 Documents attached to this advice",
					"example": 1
				}
			}
		},
		"S51AdvicePaginatedResponse": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"description": "The page number required",
					"example": 1
				},
				"pageDefaultSize": {
					"type": "integer",
					"description": "The default number of S51 Advice per page",
					"example": 50
				},
				"pageCount": {
					"type": "integer",
					"description": "The total number of pages",
					"example": 1
				},
				"itemCount": {
					"type": "integer",
					"description": "The total number of s51 Advice records on the case",
					"example": 1
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/S51AdviceDetails"
					}
				}
			}
		},
		"S51AdvicePaginatedResponseWithDocumentDetails": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"description": "The page number required",
					"example": 1
				},
				"pageDefaultSize": {
					"type": "integer",
					"description": "The default number of S51 Advice per page",
					"example": 50
				},
				"pageCount": {
					"type": "integer",
					"description": "The total number of pages",
					"example": 1
				},
				"itemCount": {
					"type": "integer",
					"description": "The total number of s51 Advice records on the case",
					"example": 1
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/S51AdviceDetailsWithDocumentDetails"
					}
				}
			}
		},
		"S51AdviceDetailsArrayWithCaseId": {
			"type": "object",
			"properties": {
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/S51AdviceDetailsWithCaseId"
					}
				}
			}
		},
		"S51AdvicePaginatedBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"pageNumber": {
							"type": "string",
							"example": "Page Number is not valid"
						},
						"pageSize": {
							"type": "string",
							"example": "Page Size is not valid"
						},
						"unknown": {
							"type": "string"
						}
					}
				}
			}
		},
		"S51AdviceUpdateRequestBody": {
			"type": "object",
			"properties": {
				"title": {
					"type": "string",
					"description": "Advice title",
					"example": "Advice regarding right to roam"
				},
				"firstName": {
					"type": "string",
					"description": "First name of enquirer",
					"example": "John"
				},
				"lastName": {
					"type": "string",
					"description": "Last name of enquirer",
					"example": "Keats"
				},
				"enquirer": {
					"type": "string",
					"description": "Name of enquiring company / organisation",
					"example": "New Power Plc"
				},
				"enquiryMethod": {
					"type": "string",
					"enum": ["phone", "email", "meeting", "post"],
					"description": "Enquiry method",
					"example": "email"
				},
				"enquiryDate": {
					"type": "string",
					"description": "Date of enquiry",
					"example": "2023-01-11T00:00:00.000Z"
				},
				"enquiryDetails": {
					"type": "string",
					"description": "Details of the enquiry",
					"example": "details of the advice sought"
				},
				"adviser": {
					"type": "string",
					"description": "Name of who gave the advice",
					"example": "John Caseworker-Smith"
				},
				"adviceDate": {
					"type": "string",
					"description": "Date advice given",
					"example": "2023-02-11T00:00:00.000Z"
				},
				"adviceDetails": {
					"type": "string",
					"description": "Details of the advive given",
					"example": "details of the advice provided"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Published status",
					"example": "redacted"
				},
				"publishedStatus": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "not_checked"
				}
			}
		},
		"S51AdviceMultipleUpdateRequestBody": {
			"type": "object",
			"properties": {
				"redacted": {
					"type": "boolean",
					"description": "Redacted status",
					"example": true
				},
				"status": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "published"
				},
				"items": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer",
								"description": "The S51 Advice record id",
								"example": 1
							}
						}
					}
				}
			}
		},
		"S51AdviceUpdateResponseItem": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"description": "The S51 Advice record id",
					"example": "1"
				},
				"status": {
					"type": "string",
					"enum": ["not_checked", "checked", "ready_to_publish", "published", "not_published"],
					"description": "Published status",
					"example": "published"
				},
				"redactedStatus": {
					"type": "string",
					"enum": ["not_redacted", "redacted"],
					"description": "Redacted status",
					"example": "not_redacted"
				}
			}
		},
		"S51AdviceMultipleUpdateResponseBody": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/S51AdviceUpdateResponseItem"
			}
		},
		"S51AdviceUpdateBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"items": {
							"type": "string",
							"example": "Unknown S51 Advice id 100"
						},
						"unknown": {
							"type": "string"
						}
					}
				}
			}
		},
		"S51AdvicePublishRequestBody": {
			"type": "object",
			"properties": {
				"publishAll": {
					"type": "boolean",
					"description": "Optional parameter. True if all S51 Advice in the publishing queue for that case is to be published",
					"example": true
				},
				"ids": {
					"type": "array",
					"items": {
						"type": "string",
						"example": "1"
					},
					"description": "Array of S51 Advice Ids to publish"
				}
			}
		},
		"ProjectUpdateNotificationLogList": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"minimum": 0
				},
				"pageCount": {
					"type": "integer",
					"minimum": 0
				},
				"pageSize": {
					"type": "integer",
					"minimum": 0
				},
				"itemCount": {
					"type": "integer",
					"minimum": 0
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProjectUpdateNotificationLog"
					}
				}
			}
		},
		"ProjectUpdateNotificationLogListBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"page": {
							"type": "string",
							"example": "page must be a number"
						},
						"pageSize": {
							"type": "string",
							"example": "pageSize must be a number"
						}
					}
				}
			}
		},
		"ProjectUpdateNotificationLogCreateRequest": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/ProjectUpdateNotificationLog"
			}
		},
		"ProjectUpdateNotificationLogCreateBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"[*].projectUpdateId": {
							"type": "string",
							"example": "projectUpdateId is required"
						},
						"[*].subscriptionId": {
							"type": "string",
							"example": "subscriptionId is required"
						},
						"[*].entryDate": {
							"type": "string",
							"example": "entryDate is required"
						},
						"[*].emailSent": {
							"type": "string",
							"example": "emailSent must be a boolean"
						},
						"[*].functionInvocationId": {
							"type": "string",
							"example": "functionInvocationId must be a string"
						}
					}
				}
			}
		},
		"ProjectUpdateNotificationLog": {
			"type": "object",
			"required": [
				"projectUpdateId",
				"subscriptionId",
				"entryDate",
				"emailSent",
				"functionInvocationId"
			],
			"properties": {
				"id": {
					"type": "integer",
					"minimum": 0
				},
				"projectUpdateId": {
					"type": "integer",
					"minimum": 0
				},
				"subscriptionId": {
					"type": "integer",
					"minimum": 0
				},
				"entryDate": {
					"type": "string",
					"format": "date-time",
					"description": "the date this notification was handled",
					"example": "2022-12-21T12:42:40.885Z"
				},
				"emailSent": {
					"type": "boolean",
					"description": "whether an email was successfully sent"
				},
				"functionInvocationId": {
					"type": "string",
					"description": "the ID of the Azure function run that handled this entry"
				}
			}
		},
		"RepresentationSummary": {
			"type": "object",
			"properties": {
				"id": {
					"type": "number",
					"example": 1
				},
				"reference": {
					"type": "string",
					"example": "BC0110001-2"
				},
				"status": {
					"type": "string",
					"example": "VALID"
				},
				"redacted": {
					"type": "boolean",
					"example": true
				},
				"received": {
					"type": "string",
					"example": "2023-03-14T14:28:25.704Z"
				},
				"firstName": {
					"type": "string",
					"example": "James"
				},
				"lastName": {
					"type": "string",
					"example": "Bond"
				},
				"organisationName": {
					"type": "string",
					"example": "MI6"
				}
			}
		},
		"Subscriptions": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"minimum": 0
				},
				"pageCount": {
					"type": "integer",
					"minimum": 0
				},
				"pageSize": {
					"type": "integer",
					"minimum": 0
				},
				"itemCount": {
					"type": "integer",
					"minimum": 0
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Subscription"
					}
				}
			}
		},
		"SubscriptionsListBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"example": "type must be one of ..."
						},
						"caseReference": {
							"type": "string",
							"example": "must be a string"
						},
						"page": {
							"type": "string",
							"example": "page must be a number"
						},
						"pageSize": {
							"type": "string",
							"example": "pageSize must be a number"
						}
					}
				}
			}
		},
		"SubscriptionGetRequest": {
			"type": "object",
			"required": ["caseReference", "emailAddress"],
			"properties": {
				"caseReference": {
					"type": "string",
					"example": "SOMEREF"
				},
				"emailAddress": {
					"type": "string",
					"example": "me@example.com"
				}
			}
		},
		"SubscriptionGetBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"caseReference": {
							"type": "string",
							"example": "caseReference is required"
						},
						"emailAddress": {
							"type": "string",
							"example": "emailAddress is required"
						},
						"unknown": {
							"type": "string"
						}
					}
				}
			}
		},
		"SubscriptionCreateRequest": {
			"type": "object",
			"required": ["caseReference", "emailAddress", "subscriptionType"],
			"properties": {
				"caseReference": {
					"type": "string",
					"description": "the case reference the subscription relates to"
				},
				"emailAddress": {
					"type": "string",
					"format": "email",
					"examples": ["alan.turing@planninginspectorate.gov.uk"]
				},
				"subscriptionTypes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": ["allUpdates", "applicationSubmitted", "applicationDecided", "registrationOpen"]
					},
					"description": "which updates does the subscriber wants to get notified of"
				},
				"startDate": {
					"type": "string",
					"format": "date-time",
					"description": "The date to start getting updates"
				},
				"endDate": {
					"type": "string",
					"format": "date-time",
					"description": "The date to stop getting updates"
				},
				"language": {
					"type": "string",
					"enum": ["English", "Welsh"],
					"default": "English"
				}
			}
		},
		"SubscriptionCreateBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"caseReference": {
							"type": "string",
							"example": "caseReference is required"
						},
						"emailAddress": {
							"type": "string",
							"example": "emailAddress is required"
						},
						"subscriptionTypes": {
							"type": "string",
							"example": "subscriptionTypes is required"
						},
						"startDate": {
							"type": "string",
							"example": "startDate must be a valid date"
						},
						"endDate": {
							"type": "string",
							"example": "endDate must be a valid date"
						},
						"language": {
							"type": "string",
							"example": "language must be one of 'English', 'Welsh'"
						},
						"code": {
							"type": "string",
							"example": "P2002",
							"description": "prisma error code"
						},
						"constraint": {
							"type": "string",
							"example": "caseReference and emailAddress combination must be unique"
						},
						"unknown": {
							"type": "string"
						}
					}
				}
			}
		},
		"SubscriptionUpdateRequest": {
			"type": "object",
			"required": ["endDate"],
			"properties": {
				"endDate": {
					"type": "string",
					"format": "date-time",
					"description": "The date to stop getting updates"
				}
			}
		},
		"SubscriptionUpdateBadRequest": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"endDate": {
							"type": "string",
							"example": "endDate must be a valid date"
						},
						"id": {
							"type": "string",
							"example": "id must be a valid integer'"
						},
						"code": {
							"type": "string",
							"example": "P2002",
							"description": "prisma error code"
						},
						"notFound": {
							"type": "string",
							"example": "subscription not found"
						},
						"unknown": {
							"type": "string"
						}
					}
				}
			}
		},
		"SubscriptionNotFound": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"notFound": {
							"type": "string",
							"example": "subscription not found"
						}
					}
				}
			}
		},
		"Subscription": {
			"type": "object",
			"required": ["caseReference", "emailAddress", "subscriptionType"],
			"properties": {
				"id": {
					"type": "number",
					"description": "back office ID for this subscription"
				},
				"caseReference": {
					"type": "string",
					"description": "the case reference the subscription relates to"
				},
				"emailAddress": {
					"type": "string",
					"format": "email",
					"examples": ["alan.turing@planninginspectorate.gov.uk"]
				},
				"subscriptionTypes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": ["allUpdates", "applicationSubmitted", "applicationDecided", "registrationOpen"]
					},
					"description": "which updates does the subscriber wants to get notified of"
				},
				"startDate": {
					"type": "string",
					"format": "date-time",
					"description": "The date to start getting updates"
				},
				"endDate": {
					"type": "string",
					"format": "date-time",
					"description": "The date to stop getting updates"
				},
				"language": {
					"type": "string",
					"enum": ["English", "Welsh"],
					"default": "English"
				}
			}
		},
		"ProjectTeamMember": {
			"type": "object",
			"properties": {
				"userId": {
					"type": "string",
					"example": "abcd-0001-fghi"
				},
				"caseId": {
					"type": "number",
					"example": 1
				},
				"role": {
					"type": "string",
					"example": "officer"
				}
			}
		},
		"ProjectTeamMembers": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/ProjectTeamMember"
			}
		},
		"UserGuidPayload": {
			"type": "object",
			"properties": {
				"userId": {
					"type": "string",
					"description": "Azure AD User Id",
					"example": "1234-abcd-6789"
				}
			}
		},
		"UserRolePayload": {
			"type": "object",
			"properties": {
				"role": {
					"type": "string",
					"description": "Project user role",
					"example": "case_manager"
				}
			}
		},
		"GeneralError": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"message": {
							"type": "string",
							"example": "something went wrong"
						}
					}
				}
			}
		},
		"InternalError": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"unknown": {
							"type": "string",
							"example": "unknown internal error"
						}
					}
				}
			}
		},
		"NotFound": {
			"type": "object",
			"properties": {
				"errors": {
					"type": "object",
					"properties": {
						"notFound": {
							"type": "string",
							"example": "resource not found"
						}
					}
				}
			}
		},
		"ApplicationKeyDates": {
			"type": "object",
			"properties": {
				"preApplication": {
					"type": "object",
					"properties": {
						"datePINSFirstNotifiedOfProject": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateProjectAppearsOnWebsite": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"anticipatedSubmissionDateNonSpecific": {
							"type": "string",
							"description": "Quarter followed by year",
							"example": "Q1 2023"
						},
						"anticipatedDateOfSubmission": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"screeningOpinionSought": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"screeningOpinionIssued": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"scopingOpinionSought": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"scopingOpinionIssued": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"section46Notification": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"acceptance": {
					"type": "object",
					"properties": {
						"dateOfDCOSubmission": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"deadlineForAcceptanceDecision": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateOfDCOAcceptance": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateOfNonAcceptance": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"preExamination": {
					"type": "object",
					"properties": {
						"dateOfRepresentationPeriodOpen": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateOfRelevantRepresentationClose": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"extensionToDateRelevantRepresentationsClose": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateRRepAppearOnWebsite": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateIAPIDue": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"rule6LetterPublishDate": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"preliminaryMeetingStartDate": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"notificationDateForPMAndEventsDirectlyFollowingPM": {
							"type": "number",
							"example": 1646822600
						},
						"notificationDateForEventsApplicant": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"examination": {
					"type": "object",
					"properties": {
						"dateSection58NoticeReceived": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"confirmedStartOfExamination": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"rule8LetterPublishDate": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"deadlineForCloseOfExamination": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateTimeExaminationEnds": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"stage4ExtensionToExamCloseDate": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"recommendation": {
					"type": "object",
					"properties": {
						"deadlineForSubmissionOfRecommendation": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"dateOfRecommendations": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"stage5ExtensionToRecommendationDeadline": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"decision": {
					"type": "object",
					"properties": {
						"deadlineForDecision": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"confirmedDateOfDecision": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						},
						"stage5ExtensionToDecisionDeadline": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"postDecision": {
					"type": "object",
					"properties": {
						"jRPeriodEndDate": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				},
				"withdrawal": {
					"type": "object",
					"properties": {
						"dateProjectWithdrawn": {
							"type": "number",
							"description": "Unix timestamp date",
							"example": 1646822600
						}
					}
				}
			}
		}
	}
}
