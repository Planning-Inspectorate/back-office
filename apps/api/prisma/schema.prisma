generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Appeal {
  id                           Int                         @id @default(autoincrement())
  reference                    String
  createdAt                    DateTime                    @default(now())
  updatedAt                    DateTime                    @default(now())
  addressId                    Int?
  localPlanningDepartment      String
  planningApplicationReference String
  startedAt                    DateTime?
  userId                       Int?
  appellantId                  Int?                        @unique
  appealTypeId                 Int?
  address                      Address?                    @relation(fields: [addressId], references: [id])
  appealType                   AppealType?                 @relation(fields: [appealTypeId], references: [id])
  appellant                    Appellant?                  @relation(fields: [appellantId], references: [id])
  user                         User?                       @relation(fields: [userId], references: [id])
  appealDetailsFromAppellant   AppealDetailsFromAppellant?
  appealStatus                 AppealStatus[]
  inspectorDecision            InspectorDecision?
  lpaQuestionnaire             LPAQuestionnaire?
  reviewQuestionnaire          ReviewQuestionnaire[]
  siteVisit                    SiteVisit?
  validationDecision           ValidationDecision[]
}

model AppealType {
  id        Int      @id @default(autoincrement())
  type      String   @unique
  shorthand String   @unique
  Appeal    Appeal[]
}

model AppealStatus {
  id                  Int      @id @default(autoincrement())
  status              String   @default("received_appeal")
  createdAt           DateTime @default(now())
  valid               Boolean  @default(true)
  appealId            Int
  subStateMachineName String?
  compoundStateName   String?
  appeal              Appeal   @relation(fields: [appealId], references: [id])
}

model Appellant {
  id        Int     @id @default(autoincrement())
  name      String
  email     String
  agentName String?
  appeal    Appeal?
}

model AppealDetailsFromAppellant {
  id                                   Int      @id @default(autoincrement())
  appealId                             Int      @unique
  siteVisibleFromPublicLand            Boolean?
  appellantOwnsWholeSite               Boolean?
  appellantOwnsWholeSiteDescription    String?
  healthAndSafetyIssues                Boolean?
  healthAndSafetyIssuesDescription     String?
  siteVisibleFromPublicLandDescription String?
  appeal                               Appeal   @relation(fields: [appealId], references: [id])
}

model Application {
  id          Int       @id @default(autoincrement())
  status      String    @default("open")
  reference   String
  modifiedAt  DateTime
  subSectorId Int
  subSector   SubSector @relation(fields: [subSectorId], references: [id])
}

model Sector {
  id            Int         @id @default(autoincrement())
  abbreviation  String
  name          String      @unique
  displayNameEn String
  displayNameCy String
  SubSector     SubSector[]
}

model SubSector {
  id            Int           @id @default(autoincrement())
  abbreviation  String
  name          String        @unique
  displayNameEn String
  displayNameCy String
  sectorId      Int
  sector        Sector        @relation(fields: [sectorId], references: [id])
  Application   Application[]
}

model Address {
  id           Int      @id @default(autoincrement())
  addressLine1 String?
  addressLine2 String?
  postcode     String?
  county       String?
  town         String?
  Appeal       Appeal[]
}

model ValidationDecision {
  id                         Int      @id @default(autoincrement())
  appealId                   Int
  createdAt                  DateTime @default(now())
  decision                   String
  namesDoNotMatch            Boolean  @default(false)
  sensitiveInfo              Boolean  @default(false)
  missingApplicationForm     Boolean  @default(false)
  missingDecisionNotice      Boolean  @default(false)
  missingGroundsForAppeal    Boolean  @default(false)
  missingSupportingDocuments Boolean  @default(false)
  inflammatoryComments       Boolean  @default(false)
  openedInError              Boolean  @default(false)
  wrongAppealTypeUsed        Boolean  @default(false)
  outOfTime                  Boolean  @default(false)
  noRightOfAppeal            Boolean  @default(false)
  notAppealable              Boolean  @default(false)
  lPADeemedInvalid           Boolean  @default(false)
  otherReasons               String?
  descriptionOfDevelopment   String?
  appeal                     Appeal   @relation(fields: [appealId], references: [id])
}

model LPAQuestionnaire {
  id                                                    Int       @id @default(autoincrement())
  appealId                                              Int       @unique
  affectsListedBuilding                                 Boolean?
  listedBuildingDescription                             String?
  extraConditions                                       Boolean?
  inGreenBelt                                           Boolean?
  inOrNearConservationArea                              Boolean?
  siteVisibleFromPublicLand                             Boolean?
  doesInspectorNeedToEnterSite                          Boolean?
  doesInspectorNeedToAccessNeighboursLand               Boolean?
  doesInspectorNeedToAccessNeighboursLandDescription    String?
  healthAndSafetyIssues                                 Boolean?
  appealsInImmediateAreaBeingConsidered                 String?
  receivedAt                                            DateTime?
  sentAt                                                DateTime  @default(now())
  doesInspectorNeedToEnterSiteDescription               String?
  emergingDevelopmentPlanOrNeighbourhoodPlan            Boolean?
  emergingDevelopmentPlanOrNeighbourhoodPlanDescription String?
  healthAndSafetyIssuesDescription                      String?
  siteVisibleFromPublicLandDescription                  String?
  appeal                                                Appeal    @relation(fields: [appealId], references: [id])
}

model ReviewQuestionnaire {
  id                                                                          Int      @id @default(autoincrement())
  appealId                                                                    Int
  createdAt                                                                   DateTime @default(now())
  complete                                                                    Boolean  @default(false)
  applicationPlanningOfficersReportMissingOrIncorrect                         Boolean  @default(false)
  applicationPlansToReachDecisionMissingOrIncorrect                           Boolean  @default(false)
  applicationPlansToReachDecisionMissingOrIncorrectDescription                String?
  policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrect                  Boolean  @default(false)
  policiesStatutoryDevelopmentPlanPoliciesMissingOrIncorrectDescription       String?
  policiesOtherRelevantPoliciesMissingOrIncorrect                             Boolean  @default(false)
  policiesOtherRelevantPoliciesMissingOrIncorrectDescription                  String?
  policiesSupplementaryPlanningDocumentsMissingOrIncorrect                    Boolean  @default(false)
  policiesSupplementaryPlanningDocumentsMissingOrIncorrectDescription         String?
  siteConservationAreaMapAndGuidanceMissingOrIncorrect                        Boolean  @default(false)
  siteConservationAreaMapAndGuidanceMissingOrIncorrectDescription             String?
  siteListedBuildingDescriptionMissingOrIncorrect                             Boolean  @default(false)
  siteListedBuildingDescriptionMissingOrIncorrectDescription                  String?
  thirdPartyApplicationNotificationMissingOrIncorrect                         Boolean  @default(false)
  thirdPartyApplicationNotificationMissingOrIncorrectListOfAddresses          Boolean  @default(false)
  thirdPartyApplicationNotificationMissingOrIncorrectCopyOfLetterOrSiteNotice Boolean  @default(false)
  thirdPartyApplicationPublicityMissingOrIncorrect                            Boolean  @default(false)
  thirdPartyRepresentationsMissingOrIncorrect                                 Boolean  @default(false)
  thirdPartyRepresentationsMissingOrIncorrectDescription                      String?
  thirdPartyAppealNotificationMissingOrIncorrect                              Boolean  @default(false)
  thirdPartyAppealNotificationMissingOrIncorrectListOfAddresses               Boolean  @default(false)
  thirdPartyAppealNotificationMissingOrIncorrectCopyOfLetterOrSiteNotice      Boolean  @default(false)
  appeal                                                                      Appeal   @relation(fields: [appealId], references: [id])
}

model SiteVisit {
  id        Int      @id @default(autoincrement())
  appealId  Int      @unique
  visitDate DateTime
  visitSlot String
  visitType String?
  appeal    Appeal   @relation(fields: [appealId], references: [id])
}

model InspectorDecision {
  id                     Int     @id @default(autoincrement())
  appealId               Int     @unique
  outcome                String
  decisionLetterFilename String?
  appeal                 Appeal  @relation(fields: [appealId], references: [id])
}

model User {
  id             Int      @id @default(autoincrement())
  azureReference Int?     @unique
  appeal         Appeal[]
}
