generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Appeal {
  id                           Int                  @id @default(autoincrement())
  reference                    String
  address                      Address              @relation(fields: [addressId], references: [id])
  addressId                    Int
  status                       String               @default("received_appeal")
  appellantName                String
  localPlanningDepartment      String
  planningApplicationReference String
  createdAt                    DateTime             @default(now())
  updatedAt                    DateTime             @default(now())
  statusUpdatedAt              DateTime             @default(now())
  startedAt                    DateTime?
  validationDecision           ValidationDecision[]
  lpaQuestionnaire             LPAQuestionnaire?
}

model Address {
  id           Int      @id @default(autoincrement())
  addressLine1 String?
  addressLine2 String?
  town         String?
  county       String?
  postcode     String?
  Appeal       Appeal[]
}

model ValidationDecision {
  id                         Int      @id @default(autoincrement())
  appeal                     Appeal   @relation(fields: [appealId], references: [id])
  appealId                   Int
  createdAt                  DateTime @default(now())
  decision                   String //can be 'valid', 'invalid' or 'incomplete' ...  that can be managed with enum
  namesDoNotMatch            Boolean  @default(false)
  sensitiveInfo              Boolean  @default(false)
  missingApplicationForm     Boolean  @default(false)
  missingDecisionNotice      Boolean  @default(false)
  missingGroundsForAppeal    Boolean  @default(false)
  missingSupportingDocuments Boolean  @default(false)
  inflammatoryComments        Boolean  @default(false)
  openedInError              Boolean  @default(false)
  wrongAppealTypeUsed        Boolean  @default(false)
  outOfTime                  Boolean  @default(false)
  noRightOfAppeal            Boolean  @default(false)
  notAppealable              Boolean  @default(false)
  lPADeemedInvalid           Boolean  @default(false)
  otherReasons               String?
  descriptionOfDevelopment   String?
}

model LPAQuestionnaire {
  id                                                 Int       @id @default(autoincrement())
  appeal                                             Appeal    @relation(fields: [appealId], references: [id])
  appealId                                           Int       @unique
  affectsListedBuilding                              Boolean?
  listedBuildingDescription                          String?
  extraConditions                                    Boolean?
  inGreenBelt                                        Boolean?
  inOrNearConservationArea                           Boolean?
  siteVisibleFromPublicLand                          Boolean?
  sideVisibleFromPublicLandDescription               String?
  doesInspectorNeedToEnterSite                       Boolean?
  doesInspectorNeedToEnterSideDescription            String?
  doesInspectorNeedToAccessNeighboursLand            Boolean?
  doesInspectorNeedToAccessNeighboursLandDescription String?
  healthAndSafetyIssues                              Boolean?
  healthAndSafetyIsueesDescription                   String?
  appealsInImmediateAreaBeingConsidered              String?
  sentAt                                             DateTime  @default(now())
  receivedAt                                         DateTime?
}
