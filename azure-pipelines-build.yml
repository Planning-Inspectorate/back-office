parameters:
  - name: buildAPI
    displayName: Build API
    type: boolean
    default: true
  - name: buildWeb
    displayName: Build Web
    type: boolean
    default: true
  - name: buildDocumentCheckFunction
    displayName: Build Document Check Function
    type: boolean
    default: true
  - name: buildMalwareDetectedFunction
    displayName: Build Malware Detected Function
    type: boolean
    default: true
  - name: buildODWIntegrationFunctions
    displayName: Build ODW Integration Functions
    type: boolean
    default: true
  - name: buildDocumentPublishFunctions
    displayName: Build Document Publish Functions
    type: boolean
    default: true
  - name: buildFunctionHandleSubscriptions
    displayName: Build Function - Handle Subscriptions
    type: boolean
    default: true
  - name: buildDeadlineSubmissionsFunction
    displayName: Build Function - Deadline Submissions
    type: boolean
    default: true
  - name: buildFunctionNotifySubscribers
    displayName: Build Function - Notify Subscribers
    type: boolean
    default: true
  - name: buildFunctionApplicationsMigration
    displayName: Build Function - Applications Migration
    type: boolean
    default: true
  - name: buildFunctionAppealsCasedataImport
    displayName: Build Function - Appeals Casedata Import
    type: boolean
    default: true
  - name: buildFunctionAppealsUserImport
    displayName: Build Function - Appeals User Import
    type: boolean
    default: true
  - name: buildFunctionAppealsDocProcessing
    displayName: Build Function - Appeals Document Processing
    type: boolean
    default: true

pr: none

trigger:
  branches:
    include:
      - main

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.4.0

extends:
  template: stages/wrapper_ci.yml@templates
  parameters:
    globalVariables:
      - template: azure-pipelines-variables.yml@self
    validationJobs:
      - name: Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm ci
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm run tscheck
              environmentVariables:
                TURBO_TEAM: $(TURBO_TEAM)
                TURBO_API: $(TURBO_API)
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm run lint:js
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm run test
              environmentVariables:
                TURBO_TEAM: $(TURBO_TEAM)
                TURBO_API: $(TURBO_API)
                TURBO_TOKEN: $(TURBO_TOKEN)
          - template: ../steps/check_changed_files.yml
            parameters:
              pathFilters:
                - name: packages
                  path: packages
                - name: web
                  path: apps/web
                - name: api
                  path: apps/api
                - name: appeals-api
                  path: appeals/api
                - name: appeals-web
                  path: appeals/web
                - name: function-document-check
                  path: apps/functions/document-check
                - name: function-malware-detected
                  path: apps/functions/malware-detected
                - name: function-odw-integration
                  path: apps/functions/odw-integration
                - name: function-document-publish
                  path: apps/functions/document-publish
                - name: function-handle-subscriptions
                  path: apps/functions/handle-subscriptions
                - name: function-deadline-submissions
                  path: apps/functions/deadline-submissions
                - name: function-notify-subscribers
                  path: apps/functions/notify-subscribers
                - name: function-applications-migration
                  path: apps/functions/applications-migration
                - name: function-appeals-casedata-import
                  path: appeals/functions/casedata-import
                - name: function-appeals-user-import
                  path: appeals/functions/user-import
                - name: function-appeals-document-processing
                  path: appeals/functions/document-processing
              stepName: check_files
      - name: Build API
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAPI }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.api'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/apps/api/Dockerfile
              repository: back-office/back-office-api
      - name: Build Document Check Function
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildDocumentCheckFunction }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-document-check'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/blob-storage-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/function-document-check
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/document-check/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/document-check/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/document-check/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/document-check
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-document-check
            displayName: Publish Functions Artifact
      - name: Build Function - ODW Integration
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildODWIntegrationFunctions }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-odw-integration'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/blob-storage-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/function-odw-integration
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/odw-integration/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/odw-integration/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/odw-integration/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/odw-integration
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-odw-integration
            displayName: Publish Functions Artifact
      - name: Build Function - Handle Subscriptions
        condition: >-
            and(
              succeeded(),
              or(
                and(
                  eq(variables['Build.Reason'], 'Manual'),
                  eq(${{ parameters.buildFunctionHandleSubscriptions }}, 'true')
                ),
                and(
                  ne(variables['Build.Reason'], 'Manual'),
                  or(
                    eq(variables['Build.SourceBranchName'], 'main'),
                    eq(dependencies.run_linting_and_tests.outputs['check_files.function-handle-subscriptions'], 'true')
                  )
                )
              )
            )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/event-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/functions-handle-subscriptions
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/handle-subscriptions/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/handle-subscriptions/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/handle-subscriptions/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/handle-subscriptions
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-handle-subscriptions
            displayName: Publish Functions Artifact
      - name: Build Function - Notify Subscribers
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionNotifySubscribers }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-notify-subscribers'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/applications) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/applications.functions-notify-subscribers
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/notify-subscribers/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/notify-subscribers/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/notify-subscribers/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/notify-subscribers
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-notify-subscribers
            displayName: Publish Functions Artifact
      - name: Build Function - Applications Migration
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionApplicationsMigration }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-applications-migration'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/blob-storage-client) npm install $(npm pack $(Build.Repository.LocalPath)/packages/applications) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/functions-applications-migration
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/applications-migration/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/applications-migration/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/applications-migration/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/applications-migration
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-applications-migration
            displayName: Publish Functions Artifact
      - name: Build Function - Deadline Submissions
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildDeadlineSubmissionsFunction }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-deadline-submissions'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/event-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) $(npm pack $(Build.Repository.LocalPath)/packages/blob-storage-client) --only=prod --workspace=@pins/functions-deadline-submissions
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/deadline-submissions/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/deadline-submissions/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/deadline-submissions/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/deadline-submissions
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-deadline-submissions
            displayName: Publish Functions Artifact
      - name: Build Document Publish Functions
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildDocumentPublishFunctions }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-document-publish'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/blob-storage-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) $(npm pack $(Build.Repository.LocalPath)/packages/event-client) --only=prod --workspace=@pins/function-document-publish
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/document-publish/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/document-publish/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/document-publish/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/document-publish
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-document-publish
            displayName: Publish Functions Artifact
      - name: Build Malware Detected Functions
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildMalwareDetectedFunction }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-malware-detected'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/platform) $(npm pack $(Build.Repository.LocalPath)/packages/event-client) --only=prod --workspace=@pins/function-malware-detected
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/apps/functions/malware-detected/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/apps/functions/malware-detected/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/apps/functions/malware-detected/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/apps/functions/malware-detected
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-malware-detected
            displayName: Publish Functions Artifact
      - name: Build Web
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildWeb }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.web'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/apps/web/Dockerfile
              repository: back-office/back-office-web
      - name: Build Appeals API
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAPI }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.appeals-api'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/api/Dockerfile
              repository: back-office/back-office-appeals-api
      - name: Build Appeals Web
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildWeb }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.appeals-web'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/web/Dockerfile
              repository: back-office/appeals-web
      - name: Build Function - Appeal Casedata Import
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionAppealsCasedataImport }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-appeals-casedata-import'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/event-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/functions-bo-appeals-casedata-import
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/appeals/functions/casedata-import/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/appeals/functions/casedata-import/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/appeals/functions/casedata-import/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/appeals/functions/casedata-import
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-appeals-casedata-import
            displayName: Publish Functions Artifact
      - name: Build Function - Appeal User Import
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionAppealsUserImport }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-appeals-user-import'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/event-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/functions-bo-appeals-hrdata-import
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/appeals/functions/user-import/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/appeals/functions/user-import/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/appeals/functions/user-import/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/appeals/functions/user-import
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-appeals-user-import
            displayName: Publish Functions Artifact
      - name: Build Function - Appeal Document Processing
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionAppealsDocProcessing }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-appeals-document-processing'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm install $(npm pack $(Build.Repository.LocalPath)/packages/event-client) $(npm pack $(Build.Repository.LocalPath)/packages/platform) --only=prod --workspace=@pins/functions-bo-appeals-hrdata-import
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              mkdir -p $(Build.Repository.LocalPath)/appeals/functions/document-processing/node_modules/@pins
              mv -n $(Build.Repository.LocalPath)/node_modules/* $(Build.Repository.LocalPath)/appeals/functions/document-processing/node_modules/
              cp -r $(Build.Repository.LocalPath)/packages/* $(Build.Repository.LocalPath)/appeals/functions/document-processing/node_modules/@pins
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/appeals/functions/document-processing
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: function-appeals-document-processing
            displayName: Publish Functions Artifact
