parameters:
  - name: buildAPI
    displayName: Build API
    type: boolean
    default: true
  - name: buildWeb
    displayName: Build Web
    type: boolean
    default: true
  - name: buildFunctionApplicationsMigration
    displayName: Build Function - Applications Migration
    type: boolean
    default: true
  - name: buildFunctionApplicationsBackgroundJobs
    displayName: Build Function - Applications Background Jobs
    type: boolean
    default: true
  - name: buildFunctionApplicationsCommandHandlers
    displayName: Build Function - Applications Command Handlers
    type: boolean
    default: true
  - name: buildFunctionAppealsCasedataImport
    displayName: Build Function - Appeals Casedata Import
    type: boolean
    default: true
  - name: buildFunctionAppealsUserImport
    displayName: Build Function - Appeals User Import
    type: boolean
    default: true
  - name: buildFunctionAppealsDocProcessing
    displayName: Build Function - Appeals Document Processing
    type: boolean
    default: true

pr: none

trigger:
  branches:
    include:
      - main

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.4.0

extends:
  template: stages/wrapper_ci.yml@templates
  parameters:
    globalVariables:
      - template: azure-pipelines-variables.yml@self
    validationJobs:
      - name: Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm ci
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm run tscheck
              environmentVariables:
                TURBO_TEAM: $(TURBO_TEAM)
                TURBO_API: $(TURBO_API)
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm run lint:js
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 18
              script: npm run test
              environmentVariables:
                TURBO_TEAM: $(TURBO_TEAM)
                TURBO_API: $(TURBO_API)
                TURBO_TOKEN: $(TURBO_TOKEN)
          - template: ../steps/check_changed_files.yml
            parameters:
              pathFilters:
                - name: packages
                  path: packages
                - name: web
                  path: apps/web
                - name: api
                  path: apps/api
                - name: appeals-api
                  path: appeals/api
                - name: appeals-web
                  path: appeals/web
                - name: function-applications-migration
                  path: apps/functions/applications-migration
                - name: function-applications-background-jobs
                  path: apps/functions/applications-background-jobs
                - name: function-applications-command-handlers
                  path: apps/functions/applications-command-handlers
                - name: function-appeals-casedata-import
                  path: appeals/functions/casedata-import
                - name: function-appeals-user-import
                  path: appeals/functions/user-import
                - name: function-appeals-document-processing
                  path: appeals/functions/document-processing
              stepName: check_files
      - name: Build API
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAPI }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.api'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/apps/api/Dockerfile
              repository: back-office/back-office-api

      - name: Build Function - Applications Migration
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionApplicationsMigration }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-applications-migration'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'apps'
              workspaceName: 'functions-applications-migration'
              folderName: 'applications-migration'
      - name: Build Function - Applications Background Jobs
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionApplicationsBackgroundJobs }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-applications-background-jobs'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'apps'
              workspaceName: 'functions-applications-background-jobs'
              folderName: 'applications-background-jobs'
      - name: Build Function - Applications Command Handlers
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionApplicationsCommandHandlers }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-applications-command-handlers'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'apps'
              workspaceName: 'functions-applications-command-handlers'
              folderName: 'applications-command-handlers'
      - name: Build Web
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildWeb }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.web'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/apps/web/Dockerfile
              repository: back-office/back-office-web
      - name: Build Appeals API
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildAPI }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.appeals-api'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/api/Dockerfile
              repository: back-office/back-office-appeals-api
      - name: Build Appeals Web
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildWeb }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.packages'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.appeals-web'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/appeals/web/Dockerfile
              repository: back-office/appeals-web
      - name: Build Function - Appeal Casedata Import
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionAppealsCasedataImport }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-appeals-casedata-import'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              workspaceName: 'functions-bo-appeals-casedata-import'
              folderName: 'casedata-import'
      - name: Build Function - Appeal User Import
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionAppealsUserImport }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-appeals-user-import'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              workspaceName: 'functions-bo-appeals-user-import'
              folderName: 'user-import'
      - name: Build Function - Appeal Document Processing
        condition: >-
          and(
            succeeded(),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildFunctionAppealsDocProcessing }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.function-appeals-document-processing'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: azure-pipelines-package-function.yml@self
            parameters:
              root: 'appeals'
              workspaceName: 'functions-bo-appeals-document-processing
              workingDirectory: $(Build.Repository.LocalPath)'
              folderName: 'document-processing'
