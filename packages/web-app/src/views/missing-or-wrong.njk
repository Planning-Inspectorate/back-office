{% extends "layouts/form.njk" %}

{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "components/button-group.njk" import buttonGroup %}
{% from "govuk/components/input/macro.njk" import govukInput %}

{% set reasonsError = errors['missing-or-wrong-reasons'].msg %}
{% set documentsError = errors['missing-or-wrong-documents'].msg %}
{% set otherError = errors['other-reason'].msg %}

{% set noApplicationFormChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('noApplicationForm') %}
{% set noDecisionNoticeChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('noDecisionNotice') %}
{% set noGroundsOfAppealChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('noGroundsOfAppeal') %}
{% set noSupportingDocumentsChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('noSupportingDocuments') %}
{% set namesNotMatchChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('namesNotMatch') %}
{% set sensitiveInformationIncludedChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('sensitiveInformationIncluded') %}
{% set missingOrWrongDocumentsChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('missingOrWrongDocuments') %}
{% set inflammatoryCommentsChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('inflammatoryComments') %}
{% set openedInErrorChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('openedInError') %}
{% set wrongAppealTypeChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('wrongAppealType') %}
{% set otherChecked = missingOrWrong.reasons and missingOrWrong.reasons.includes and missingOrWrong.reasons.includes('other') %}

{% block formContent %}
  <p class="govuk-body">Appeal reference: {{appealReference}}</p>

  {% set otherHtml %}
    {{ govukInput({
      id: "other-reason",
      name: "other-reason",
      value: missingOrWrong.otherReason,
      label: {
        text: "List reasons"
      },
      errorMessage: otherError and {
        text: otherError
      }
    }) }}
  {% endset -%}

  {% set missingOrWrongDocumentsHtml %}
    {{ govukCheckboxes({
      idPrefix: "missing-or-wrong-documents",
      name: "missing-or-wrong-documents",
      errorMessage: documentsError and {
        text: documentsError
      },
      items: [
        {
          value: "noApplicationForm",
          text: getText("noApplicationForm"),
          checked: noApplicationFormChecked
        },
        {
          value: "noDecisionNotice",
          text: getText("noDecisionNotice"),
          checked: noDecisionNoticeChecked
        },
        {
          value: "noGroundsOfAppeal",
          text: getText("noGroundsOfAppeal"),
          checked: noGroundsOfAppealChecked
        },
        {
          value: "noSupportingDocuments",
          text: getText("noSupportingDocuments"),
          checked: noSupportingDocumentsChecked
        }
      ]
    }) }}
  {% endset -%}

  {{ govukCheckboxes({
    idPrefix: "missing-or-wrong-reasons",
    name: "missing-or-wrong-reasons",
    errorMessage: reasonsError and {
      text: reasonsError
    },
    items: [
      {
        value: "namesNotMatch",
        text: getText("namesNotMatch"),
        checked: namesNotMatchChecked
      },
      {
        value: "sensitiveInformationIncluded",
        text: getText("sensitiveInformationIncluded"),
        checked: sensitiveInformationIncludedChecked
      },
      {
        value: "missingOrWrongDocuments",
        text: getText("missingOrWrongDocuments"),
        checked: missingOrWrongDocumentsChecked,
        conditional: {
          html: missingOrWrongDocumentsHtml
        }
      },
      {
        value: "inflammatoryComments",
        text: getText("inflammatoryComments"),
        checked: inflammatoryCommentsChecked
      },
      {
        value: "openedInError",
        text: getText("openedInError"),
        checked: openedInErrorChecked
      },
      {
        value: "wrongAppealType",
        text: getText("wrongAppealType"),
        checked: wrongAppealTypeChecked
      },
      {
        value: "other",
        text: getText("other"),
        checked: otherChecked,
        conditional: {
          html: otherHtml
        }
      }
    ]
  }) }}

  {{ buttonGroup(backLink) }}
{% endblock %}
