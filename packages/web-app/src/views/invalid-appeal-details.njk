{% extends "layouts/form.njk" %}

{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "components/button-group.njk" import buttonGroup %}
{% from "govuk/components/input/macro.njk" import govukInput %}

{% set otherError = errors['other-reason'].msg %}

{% block formContent %}
  <p class="govuk-body">Appeal reference: {{appealReference}}</p>

  {% set otherHtml %}
    {{ govukInput({
      id: "other-reason",
      name: "other-reason",
      value: invalid.otherReason,
      label: {
        text: "List reasons"
      },
      hint: {
        text: "This will be sent to the appellant and LPA"
      },
      errorMessage: otherError and {
        text: otherError
      }
    }) }}
  {% endset %}

  {{ govukCheckboxes({
    idPrefix: "invalid-appeal-reasons",
    name: "invalid-appeal-reasons",
    fieldset: {
      legend: {
        text: "Reasons the appeal is invalid",
        classes: "govuk-fieldset__legend--m"
      }
    },
    errorMessage: errors['invalid-appeal-reasons'] and {
      text: errors['invalid-appeal-reasons'].msg
    },
    items: [
      {
        value: "1",
        text: getText("1"),
        checked: invalid and invalid.reasons and invalid.reasons.includes('1')
      },
      {
        value: "2",
        text: getText("2"),
        checked: invalid and invalid.reasons and invalid.reasons.includes('2')
      },
      {
        value: "3",
        text: getText("3"),
        checked: invalid and invalid.reasons and invalid.reasons.includes('3')
      },
      {
        value: "4",
        text: getText("4"),
        checked: invalid and invalid.reasons and invalid.reasons.includes('4')
      },
      {
        value: "5",
        text: getText("5"),
        checked: invalid and invalid.reasons and invalid.reasons.includes('5'),
        conditional: {
          html: otherHtml
        }
      }
    ]
  }) }}

  {{ buttonGroup(backLink) }}
{% endblock %}
